<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="ja-JP">
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="content-style-type" content="text/css">
<link rel="stylesheet" href="../media/tomoyolinux.css" media="all" type="text/css">
<title>TOMOYO Linux 1.8.x : SSH サービスでシステム管理者の操作を制限する</title>
</head>

<body>

<div id="titlebar">
<a href="../index.html.ja"><img src="../media/tomoyotitle.png" alt="tomoyotitle.png" width="320" height="40" border="0" align="left"></a>
</div>

<div id="navbar" class="tomoyo-documentation">
<ul id="navbarlist">
<li id="tomoyo-home"><a href="../index.html.ja" title="TOMOYO Linux ホーム">ホーム</a></li>
<li id="tomoyo-about"><a href="../about.html.ja" title="TOMOYO Linux の詳細">詳細</a></li>
<li id="tomoyo-download"><a href="../download.html.ja" title="TOMOYO Linux を入手">ダウンロード</a></li>
<li id="tomoyo-changelogs"><a href="../changelogs.html.ja" title="TOMOYO Linux 変更履歴">変更履歴</a></li>
<li id="tomoyo-documentation"><a href="../documentation.html.ja" title="公式ドキュメント">ドキュメント</a></li>
<li id="tomoyo-support"><a href="../support.html.ja" title="サポート情報">サポート</a></li>
<li id="tomoyo-links"><a href="../links.html.ja" title="Links">リンク</a></li>
</ul>
<ul id="switch-language">
<li id="tomoyo-switch-language"><a href="ssh-split-administrative-tasks.html.en" title="Go to English page">English page</a></li>
</ul>
</div>

<div id="content">

<div id="regular-content">

<h2>SSH サービスでシステム管理者の操作を制限する</h2>

<h3>概要</h3>

<p><object data="http://www.youtube.com/v/aEJAGBKc8uY&amp;hl=en_US&amp;fs=1" type="application/x-shockwave-flash" width="425" height="344"><param name="movie" value="http://www.youtube.com/v/aEJAGBKc8uY&amp;hl=en_US&amp;fs=1"><param name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"></object></p>

<p>このページでは、ＳＳＨサーバからログインシェルが実行される時にロールの選択を行うことにより、システム管理者の操作を制限する手順について紹介します。</p>

<h3>ステップ１：ソースコードのコンパイル</h3>

<p>使用するロールを決めます。このページでは「 Web サーバ管理者」「 Mail サーバ管理者」「セキュリティ管理者」の３つを使用します。</p>

<p>以下のソースコードをコンパイルします。このページでは、コンパイルされたプログラムの名前を /bin/sshd_login とします。また、ＳＳＨサーバのパス名を /usr/sbin/sshd とします。</p>

<pre>
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;unistd.h&gt;
#include &lt;syslog.h&gt;
#include &lt;string.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;fcntl.h&gt;

#define SSHD_EXECUTABLE_PATH "/usr/sbin/sshd"

int main(int raw_argc, char *raw_argv[])
{
	int i;
	int argc;
	int envc;
	char *filename;
	char **argv;
	char **envp;
	{ /* Check that I'm an execute handler process.  */
		int fd = open("/proc/ccs/.execute_handler", O_RDONLY);
		close(fd);
		if (fd == EOF) {
			fprintf(stderr, "FATAL: I'm not execute_handler.\n");
			return 1;
		}
	}
	if (raw_argc &lt; 7)
		return 1;
	filename = raw_argv[4];
	argc = atoi(raw_argv[5]);
	envc = atoi(raw_argv[6]);
	if (raw_argc != argc + envc + 7)
		return 1;
	for (i = 5; i &lt; argc + 5; i++)
		raw_argv[i] = raw_argv[i + 2];
	raw_argv[argc + 5] = NULL;
	for (i = argc + 6; i &lt; argc + envc + 6; i++)
		raw_argv[i] = raw_argv[i + 1];
	raw_argv[argc + envc + 6] = NULL;
	argv = raw_argv + 5;
	envp = raw_argv + argc + 6;
	/* "/usr/sbin/sshd" executes "/usr/sbin/sshd" with "-R" option. */
	if (argc == 2 &amp;&amp; !strcmp(argv[1], "-R") &amp;&amp;
	    !strcmp(raw_argv[2], SSHD_EXECUTABLE_PATH) &amp;&amp;
	    !strcmp(filename, SSHD_EXECUTABLE_PATH)) {
		execve(filename, argv, envp);
		return 1;
	}
	/* Don't allow 'shell -c "command"' request. */
	if (argc == 3 &amp;&amp; !strcmp(argv[1], "-c")) {
		fprintf(stderr, "You are not permitted to run %s\n", argv[2]);
		return 1;
	}
	printf("Select your role.\n\n");
	printf("1: Web administrator\n");
	printf("2: Mail administrator\n");
	printf("3: Security administrator\n\n");
	while (1) {
		int c = getchar();
		if (c == EOF)
			break;
		if (c == '1') {
			execve("/bin/webadmin-auth", argv, envp);
			break;
		}
		if (c == '2') {
			execve("/bin/mailadmin-auth", argv, envp);
			break;
		}
		if (c == '3') {
			execve("/bin/securityadmin-auth", argv, envp);
			break;
		}
	}
	return 1;
}
</pre>

<p>以下の内容を /bin/webadmin-auth として保存し、実行許可を与えます。</p>

<pre>
#! /bin/sh
echo "Enter password for web administrator."
stty -echo
read
stty echo
[ "$REPLY" == "webadmin" ] &amp;&amp; exec /bin/bash
echo "Authentication failure"
sleep 5
exit 1
</pre>

<p>以下の内容を /bin/mailadmin-auth として保存し、実行許可を与えます。</p>

<pre>
#! /bin/sh
echo "Enter password for mail administrator."
stty -echo
read
stty echo
[ "$REPLY" == "mailadmin" ] &amp;&amp; exec /bin/bash
echo "Authentication failure"
sleep 5
exit 1
</pre>

<p>以下の内容を /bin/securityadmin-auth として保存し、実行許可を与えます。</p>

<pre>
#! /bin/sh
echo "Enter password for security administrator."
stty -echo
read
stty echo
[ "$REPLY" == "securityadmin" ] &amp;&amp; exec /bin/bash
echo "Authentication failure"
sleep 5
exit 1
</pre>

<h3>ステップ２： TOMOYO Linux のインストールと初期化</h3>

<p><a href="chapter-3.html.ja">TOMOYO Linux をインストール</a>してから、以下のコマンドを実行して初期設定を行ってください。</p>

<pre class="command">
# /usr/lib/ccs/init_policy
</pre>

<p>その後、 TOMOYO Linux カーネルで再起動する前に以下の操作を行ってください。</p>

<p>/usr/sbin/sshd が実行された場合にはドメイン遷移が初期化されるようにするために、 /etc/ccs/exception_policy.conf に以下の内容を追加します。</p>

<pre>
initialize_domain /usr/sbin/sshd from any
</pre>

<p>/usr/sbin/sshd からのプログラムの実行要求が /bin/sshd_login に渡されるようにするために、 /etc/ccs/domain_policy.conf に以下の内容を追加します。</p>

<pre>
&lt;kernel&gt; /usr/sbin/sshd
task auto_execute_handler /bin/sshd_login
</pre>

<h3>ステップ３：学習と運用</h3>

<p>以上で設定は完了です。 TOMOYO Linux カーネルで再起動してください。</p>

<p>クライアント側から ssh でサーバ側にアクセスしてください。ログイン認証後に /bin/sshd_login によるプロンプトが表示されることを確認したら、 Ctrl-C を押してログアウトしてください。これで、 /bin/sshd_login のためのドメインである &lt;kernel&gt; /usr/sbin/sshd /bin/sshd_login が作成されました。</p>

<p>/bin/sshd_login から起動される操作を制限するために、学習モードを割り当てます。</p>

<pre class="command">
# /usr/sbin/ccs-setprofile -r 1 '&lt;kernel&gt; /usr/sbin/sshd /bin/sshd_login'
</pre>

<p>クライアント側から ssh でサーバ側にアクセスしてください。ログイン認証後に /bin/sshd_login が表示したプロンプトに対して 1 を入力し、 /bin/webadmin-auth が表示したプロンプトに対して webadmin を入力してください。これで、「 Web サーバ管理者」のためのドメインである &lt;kernel&gt; /usr/sbin/sshd /bin/sshd_login /bin/webadmin-auth /bin/bash が作成されました。</p>

<p>その後、「 Web サーバ管理者」に対して許可したい操作を行います。冒頭の動画では以下の操作をしています。</p>

<pre class="command">
# service httpd restart
# cd /var/www/html/
# tar -zxf ~/htdocs.tar.gz --strip 1
# less /var/log/httpd/access_log
</pre>

<p>許可したい操作が終わったらログアウトしてください。</p>

<p>クライアント側から ssh でサーバ側にアクセスしてください。ログイン認証後に /bin/sshd_login が表示したプロンプトに対して 2 を入力し、 /bin/mailadmin-auth が表示したプロンプトに対して mailadmin を入力してください。これで、「 Mail サーバ管理者」のためのドメインである &lt;kernel&gt; /usr/sbin/sshd /bin/sshd_login /bin/mailadmin-auth /bin/bash が作成されました。</p>

<p>その後、「 Mail サーバ管理者」に対して許可したい操作を行います。冒頭の動画では以下の操作をしています。</p>

<pre class="command">
# service sendmail restart
# mailq
# less /var/log/maillog
</pre>

<p>許可したい操作が終わったらログアウトしてください。</p>

<p>クライアント側から ssh でサーバ側にアクセスしてください。ログイン認証後に /bin/sshd_login が表示したプロンプトに対して 3 を入力し、 /bin/securityadmin-auth が表示したプロンプトに対して securityadmin を入力してください。これで、「セキュリティ管理者」のためのドメインである &lt;kernel&gt; /usr/sbin/sshd /bin/sshd_login /bin/securityadmin-auth /bin/bash が作成されました。</p>

<p>その後、「セキュリティ管理者」に対して許可したい操作を行います。冒頭の動画では以下の操作をしています。</p>

<pre class="command">
# less /var/log/tomoyo/reject_log.conf
</pre>

<p>許可したい操作が終わったらログアウトしてください。</p>

<p>確認モードを割り当て、許可したい操作を行えるかどうか確認してください。</p>

<pre class="command">
# /usr/sbin/ccs-setprofile -r 2 '&lt;kernel&gt; /usr/sbin/sshd /bin/sshd_login'
</pre>

<p>強制モードを割り当てれば完成です。</p>

<pre class="command">
# /usr/sbin/ccs-setprofile -r 3 '&lt;kernel&gt; /usr/sbin/sshd /bin/sshd_login'
</pre>

<h3>説明</h3>

<p>/bin/webadmin-auth /bin/mailadmin-auth /bin/securityadmin-auth という３つのプログラムを /usr/sbin/sshd とログインシェルとの間に挿入してやることにより、親ドメインが異なる３つのドメイン（ "&lt;kernel&gt; /usr/sbin/sshd /bin/sshd_login /bin/webadmin-auth /bin/bash", "&lt;kernel&gt; /usr/sbin/sshd /bin/sshd_login /bin/mailadmin-auth /bin/bash", "&lt;kernel&gt; /usr/sbin/sshd /bin/sshd_login /bin/securityadmin-auth /bin/bash" ）を作成し、それぞれに必要なアクセス許可だけを与えるという形で権限を分割しています。このプログラムはサンプルなのでシェルスクリプトで済ませていますが、実際に使用する場合にはちゃんとしたユーザ認証を行うプログラムを作成してください。</p>

<p>TOMOYO Linux の execute_handler 機能が /usr/sbin/sshd からのプログラムの実行要求を横取りして、 /bin/sshd_login に渡しています。 /bin/sshd_login がロールを選択させるためのプロンプトを表示して、ユーザからの応答を受け取ります。</p>

<p>システムのユーザ認証を通過後なので、シェルの実行要求を伴わないＳＳＨの機能は許可されています。ポートフォワーディングの制限なども行いたい場合は、通常通り学習モードで動作を学習させて、強制モードで動作を制限してやる必要があります。</p>

<p>それぞれのドメインではプログラムを実行するたびにドメイン遷移が発生します。ドメイン遷移をさせたくない場合は、 /etc/ccs/exception_policy.conf に以下のように keep_domain を指定することができます。</p>

<pre>
keep_domain any from &lt;kernel&gt; /usr/sbin/sshd /bin/sshd_login /bin/webadmin-auth /bin/bash
keep_domain any from &lt;kernel&gt; /usr/sbin/sshd /bin/sshd_login /bin/mailadmin-auth /bin/bash
keep_domain any from &lt;kernel&gt; /usr/sbin/sshd /bin/sshd_login /bin/securityadmin-auth /bin/bash
</pre>

</div><!-- regular-content -->

</div><!-- content -->

<div id="navfooter">
<hr>
<table>
<tr>
<td class="docs-previous">
</td>
<td class="docs-index">
<a href="index.html.ja">目次</a>
</td>
<td class="docs-next">
</td>
</tr>
<tr>
<td class="docs-previous-description">
</td>
<td class="docs-home">
</td>
<td class="docs-next-description">
</td>
</tr>
</table>
</div>

<div id="footer">
<p class="language">Go to <a href="ssh-split-administrative-tasks.html.en">English page</a>.</p>
<p class="timestamp">Last modified: $Date: 2011-02-12 08:45:11 +0000 (Sat, 12 Feb 2011) $</p>
<p class="trademark">Linux&reg; は世界各国における Linus Torvalds の登録商標です。 TOMOYO&reg; は<a href="http://www.nttdata.co.jp/">株式会社ＮＴＴデータ</a>の登録商標です。</p>
<p><a href="http://sourceforge.jp/"><img src="http://sourceforge.jp/sflogo.php?group_id=1973" width="96" height="31" alt="SourceForge.jp"></a></p>
</div>

</body>
</html>
