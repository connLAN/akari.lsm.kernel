<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="ja-JP">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<title>AKARI 導入手順書</title>
<link rel="stylesheet" href="http://tomoyo.sourceforge.jp/tomoyo.css" media="all" type="text/css">
</head>
<body>
<p style="text-align:right;"><a href="initialize.html.en">English Page</a></p>
<p style="text-align:right;">Last modified: $Date$</p>
<h1>第２章：設定の初期化</h1>

<p>このページでは、 AKARI を使うために必要となる基本操作について説明します。</p>

<hr>

<h2>ステップ１：ポリシーの初期化</h2>

<p>ファイルに対するアクセス制御だけを有効にしたい場合には</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# /usr/lib/ccs/init_policy --file-only-profile --module_name=akari
</td></tr>
</table>

<p>を、全機能を有効にしたい場合には</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# /usr/lib/ccs/init_policy --module_name=akari
</td></tr>
</table>

<p>を実行することで、ポリシーを初期化してください。</p>

<p>AKARI のポリシーファイルが /etc/ccs/ ディレクトリの中に作成されます。</p>

<hr>

<h2>ステップ２：ポリシーエディタの使い方を学習する</h2>

<p>/etc/ccs/ ディレクトリに存在するポリシーを編集するために、 /etc/ccs/ というオプションを指定して ccs-editpolicy を実行してください。</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# /usr/sbin/ccs-editpolicy /etc/ccs/
</td></tr>
</table>

<p>この画面には、ドメインツリーが表示されています。現時点では、 &lt;kernel&gt; ドメインだけが定義されています。</p>

<p><img src="editpolicy-domain-list1.png" alt="editpolicy-domain-list1.png" width="720" height="400"></p>

<p>しかし、システムが動作するにつれて、 AKARI は新しいドメインを作成してこのツリーに追加していきます。以下の画面ではたくさんのドメインが定義されています。</p>

<p><img src="editpolicy-domain-list2.png" alt="editpolicy-domain-list2.png" width="720" height="400"></p>

<p>AKARI における強制アクセス制御はドメインを単位として適用されます。全てのプロセスは１個のドメインに属しており、原則としてプログラムが実行される度に異なるドメインへと遷移します。ドメインの名前はプロセスの実行履歴として連結された文字列です。</p>

<p>例えば、カーネルが属するドメインの名前は <b>&lt;kernel&gt;</b> です。<br>
カーネルから起動された /sbin/init が属するドメインの名前は <b>&lt;kernel&gt; /sbin/init</b> です。<br>
/sbin/init から起動された /etc/rc.d/rc が属するドメインの名前は <b>&lt;kernel&gt; /sbin/init /etc/rc.d/rc</b> です。<br>
この遷移規則の例外については後述します。</p>

<p>各行の２番目の数字に注目してください。</p>

<p><img src="editpolicy-domain-profile-number.png" alt="editpolicy-domain-profile-number.png" width="720" height="400"></p>

<p>この数字はプロファイル番号と呼ばれるものです。プロファイル番号は０～２５５の整数値をとります。</p>

<p>w キーを押すと、選択肢が表示されます。</p>

<p><img src="editpolicy-window-list.png" alt="editpolicy-window-list.png" width="720" height="400"></p>

<p>p キーを押すと、プロファイルの一覧が表示されます。</p>

<p>もし、 /usr/lib/ccs/init_policy を実行する際に --file-only-profile というオプションを指定していた場合、以下のエントリが表示されます。</p>

<p><img src="editpolicy-profile-list-file-only.png" alt="editpolicy-profile-list-file-only.png" width="720" height="400"></p>

<p>もし、 /usr/lib/ccs/init_policy を実行する際に --file-only-profile というオプションを指定しなかった場合、以下のエントリが表示されます。</p>

<p><img src="editpolicy-profile-list.png" alt="editpolicy-profile-list.png" width="720" height="400"></p>

<table border="1">
<tr><td>項目</td><td>内容</td></tr>
<tr>
<td>COMMENT</td>
<td>プロファイルの内容を説明するための１行コメント。</td>
</tr>
<tr>
<td>CONFIG</td>
<td>動作モードの設定。</td>
</tr>
<tr>
<td>PREFERENCE</td>
<td>アクセスログ／学習モード／強制モードに関する設定。</td>
</tr>
</table>
<p>CONFIG 行で指定されている mode については以下の値を指定できます。</p>
<table border="1">
<tr>
<td>値</td>
<td>内容</td>
</tr>
<tr>
<td>disabled</td>
<td>無効。通常のカーネルと同様に動作する。</td>
</tr>
<tr>
<td>learning</td>
<td>学習モード。アクセス要求がポリシーに違反しても拒否しない。アクセス要求をポリシーへ追加する。</td>
</tr>
<tr>
<td>permissive</td>
<td>確認モード。アクセス要求がポリシーに違反しても拒否しない。アクセス要求をポリシーへ追加しない。</td>
</tr>
<tr>
<td>enforcing</td>
<td>強制モード。アクセス要求がポリシーに違反したら拒否する。アクセス要求をポリシーへ追加しない。</td>
</tr>
</table>

<p>w キー、 e キーの順に押すことで、以下の画面が表示されます。</p>

<p><a href="editpolicy-exception-full.png">（クリックすると全体を表示します。）<br><img src="editpolicy-exception-list1.png" alt="editpolicy-exception-list1.png" width="720" height="400"></a></p>

<p>矢印キーや Home/End/PageUp/PageDown キーを使ってスクロールすることができます。</p>

<p>この画面には以下のマクロと例外設定が表示されます。</p>

<table border="1">
<tr><td>
(1) パス名のグループ
</td><td>
<p>path_group というキーワードを使用して、パス名のグループを指定することができます。これは、複数のパス名を集約することでポリシーの記述量を減らすためのマクロです。</p>
<p>デフォルトでは、任意のパス名に一致する ANY_PATHNAME および任意のディレクトリに一致する ANY_DIRECTORY が定義されています。</p>
</td></tr><tr><td>
(2) 数値のグループ
</td><td>
<p>number_group というキーワードを使用して、数値のグループを指定することができます。これは、複数の数値を集約することでポリシーの記述量を減らすためのマクロです。</p>
<p>デフォルトでは、 0x5401 に一致する COMMON_IOCTL_CMDS が定義されています。</p>
</td></tr><tr><td>
(3) アドレスのグループ
</td><td>
<p>address_group というキーワードを使用して、 IPv4 または IPv6 アドレスのグループを指定することができます。これは、複数の IP アドレスを集約することでポリシーの記述量を減らすためのマクロです。</p>
</td></tr><tr><td>
(4) アクセス許可のグループ
</td><td>
<p>acl_group というキーワードに続けてグループ番号およびそのグループに与えられるアクセス許可を指定することができます。ドメインポリシーの中から use_group というキーワードで参照されます。これは、共通して与えられるパーミッションをグループ化することでポリシーの記述量を減らすためのマクロです。</p>
<p>例えば、 acl_group 0 file read @ANY_DIRECTORY という指定は、 use_group 0 と指定されているドメインに対して、 ANY_DIRECTORY グループに属しているパス名を参照すること（つまり任意のディレクトリの参照）を許可します。</p>
<p>例えば、 acl_group 0 file ioctl @ANY_PATHNAME @COMMON_IOCTL_CMDS という指定は、 use_group 0 と指定されているドメインに対して、 ANY_PATHNAME グループに属しているパス名（つまり任意のパス名）に対して COMMON_IOCTL_CMDS グループに属している番号（つまり 0x5401 番）の ioctl 要求を許可します。</p>
</td></tr><tr><td>
(5) プログラム名の集約
</td><td>
<p>AKARI では個々のプログラムのパス名をドメイン遷移を行う際に使用しますが、 aggregator というキーワードを使用することで必要に応じて複数のプログラムのパス名を１個のプログラムのパス名に集約して扱うことができます。</p>
</td></tr><tr><td>
(6) ドメイン遷移の例外
</td><td>
<p>AKARI では原則としてプログラムが実行されるたびにドメイン遷移が発生しますが、必要に応じてドメイン遷移を抑制したり初期化したりすることができます。</p>
<p>initialize_domain というキーワードを使用して、ドメイン遷移履歴をリセットするプログラムを指定することができます。例えば、 initialize_domain /usr/sbin/sshd という指定が行われている場合、 /usr/sbin/sshd は &lt;kernel&gt; /usr/sbin/sshd というドメインで動作するようになります。</p>
<p>no_initialize_domain というキーワードを使うことで、 initialize_domain キーワードの効果を打ち消すことができます。特定の条件下ではドメイン遷移を初期化させたくない場合に使用します。</p>
<p>keep_domain というキーワードを使用して、ドメイン遷移を行わないドメインを指定することができます。例えば、 keep_domain &lt;kernel&gt; /usr/sbin/sshd /bin/tcsh という指定が行われている場合、 &lt;kernel&gt; /usr/sbin/sshd /bin/tcsh というドメインに属しているプロセスは、 initialize_domain または no_keep_domain というキーワードで指定されたプログラムが実行されない限り、そのドメインに留まります。</p>
<p>no_keep_domain というキーワードを使うことで、 keep_domain キーワードの効果を打ち消すことができます。特定の条件下でドメイン遷移を行わせたい場合に使用します。</p>
</td></tr><tr><td>
(7) 予約するローカルポート番号
</td><td>
<p>deny_autobind というキーワードを使用して、特定のローカルポート番号がローカルポート番号の自動選択機能によって割り当てられてしまうことを防ぐことができます。これはカーネル 2.6.35 以降で利用可能な/proc/sys/net/ipv4/ip_local_reserved_ports と同様の機能を提供しています。</p>
</td></tr>
</table>

<p>q キーを押してポリシーエディタを終了してください。</p>

<p>以後、必要に応じてポリシーエディタのチュートリアルページである<a href="tool-editpolicy.html.ja">ポリシーエディタの使い方</a>を参照してください。</p>

<p>構文の詳細については<a href="policy-reference.html.ja">AKARI ポリシーポリシー解説書</a>を参照してください。</p>

<hr>

<h2><a name="configure_audit_daemon">ステップ３：アクセスログ取得の設定（省略可）</a></h2>

<p>AKARI は、「アクセス許可ログ」（ポリシーに違反しなかったアクセス要求のログ）と「アクセス拒否ログ」（ポリシーに違反したアクセス要求のログ）を記録することができます。</p>

<p>アクセスログはドメインポリシーの形式と同じであり、そのままドメインポリシーへと追加することができます。「アクセス拒否ログ」に記録された要求の中で、許可すべきものと判断したものをドメインポリシーに追加してください。</p>

<p>プロファイルの CONFIG 行で指定されている grant_log については以下の値を指定できます。</p>
<table border="1">
<tr>
<td>値</td>
<td>内容</td>
</tr>
<tr>
<td>no</td>
<td>アクセス許可ログを生成しない。ただし、個別のアクセス許可で grant_log=yes と指定されている場合には生成する。</td>
</tr>
<tr>
<td>yes</td>
<td>アクセス許可ログを生成する。ただし、個別のアクセス許可で grant_log=no と指定されている場合には生成しない。</td>
</tr>
</table>
<p>プロファイルの CONFIG 行で指定されている reject_log については以下の値を指定できます。</p>
<table border="1">
<tr>
<td>値</td>
<td>内容</td>
</tr>
<tr>
<td>no</td>
<td>アクセス拒否ログを生成しない。</td>
</tr>
<tr>
<td>yes</td>
<td>アクセス拒否ログを生成する。</td>
</tr>
</table>

<p>/proc/ccs/audit からアクセスログを読み出してファイルに保存するために /usr/sbin/ccs-auditd というデーモンプログラムが提供されています。 /etc/rc.local 等から起動するようにしてください。</p>

<p>振り分けルールは /etc/ccs/tools/auditd.conf に記録されています。以下に初期設定を示します。</p>

<pre>
# This file contains sorting rules used by ccs-auditd command.

# An audit log consists with three lines. You can refer the first line
# using 'header' keyword, the second line using 'domain' keyword, and the
# third line using 'acl' keyword.
#
# Words in each line are separated by a space character. Therefore, you can
# use 'header[index]', 'domain[index]', 'acl[index]' for referring index'th
# word of the line. The index starts from 1, and 0 refers the whole line
# (i.e. 'header[0]' = 'header', 'domain[0]' = 'domain', 'acl[0]' = 'acl').
#
# Three operators are provided for conditional sorting.
# '.contains' is for 'fgrep keyword' match.
# '.equals' is for 'grep ^keyword$' match.
# '.starts' is for 'grep ^keyword' match.
#
# Sorting rules are defined using multi-lined chunks. A chunk is terminated
# by a 'destination' line which specifies the pathname to write the audit
# log. A 'destination' line is processed only when all preceding 'header',
# 'domain' and 'acl' lines in that chunk have matched.
# Evaluation stops at the first processed 'destination' line.
# Therefore, no audit logs are written more than once.
#
# More specific matches should be placed before less specific matches.
# For example:
#
# header.contains profile=3
# domain.contains /usr/sbin/httpd
# destination     /var/log/tomoyo/reject_003_httpd.log
#
# This chunk should be placed before the chunk that matches logs with
# profile=3. If placed after, the audit logs for /usr/sbin/httpd will be
# sent to /var/log/tomoyo/reject_003.log .

# Please use TOMOYO Linux's escape rule (e.g. '\040' rather than '\ ' for
# representing a ' ' in a word).

# Discard all granted logs.
header.contains granted=yes
destination     /dev/null

# Save rejected logs with profile=0 to /var/log/tomoyo/reject_000.log
header.contains profile=0
destination     /var/log/tomoyo/reject_000.log

# Save rejected logs with profile=1 to /var/log/tomoyo/reject_001.log
header.contains profile=1
destination     /var/log/tomoyo/reject_001.log

# Save rejected logs with profile=2 to /var/log/tomoyo/reject_002.log
header.contains profile=2
destination     /var/log/tomoyo/reject_002.log

# Save rejected logs with profile=3 to /var/log/tomoyo/reject_003.log
header.contains profile=3
destination     /var/log/tomoyo/reject_003.log
</pre>

<p>注意：アクセス許可ログを保存する場合は、あっという間にファイルが大きくなるので、ディスクの空き領域に注意してください。</p>

<p>logrotate によるローテーションを行わせたい場合は、以下のような内容のファイルを /etc/logrotate.d/tomoyo に作成してください。なお、 nocreate オプションを必ず指定してください。 nocreate オプションを忘れると、最初のローテーションが実行されて以降のログが保存されなくなってしまいます。</p>

<table border="1">
<tr><td>
/var/log/tomoyo/reject_log.conf {<br>
&nbsp;&nbsp;weekly<br>
&nbsp;&nbsp;rotate 9<br>
&nbsp;&nbsp;missingok<br>
&nbsp;&nbsp;notifempty<br>
&nbsp;&nbsp;nocreate<br>
}
</td></tr>
</table>

<p>アクセスログを保存する必要が無い場合は、 ccs-auditd を実行する必要はありません。また、プロファイルで PREFERENCE={ max_audit_log=0 } という指定をすることにより、消費メモリの節約と応答速度の向上が期待できます。しかし、アクセス拒否ログは詳細なアクセス許可を指定する際の元データとして利用することができるので、アクセス拒否ログは保存しておくことを推奨します。</p>

<hr>

<h2>ステップ４：システムの再起動</h2>

<p>システムを再起動して、起動時に AKARI 対応カーネルを選択してください。</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# reboot
</td></tr>
</table>

<p>/sbin/init が開始される直前に以下のようなメッセージが表示されるはずです。（表示される内容は環境により異なります。）</p>

<pre>
&amp;security_ops=c07cf204
vfsmount_lock=c0702980
AKARI: 1.0.14   2011/05/11
Access Keeping And Regulating Instrument registered.
Calling /sbin/ccs-init to load policy. Please wait.
CCSecurity: 1.8.1+   2011/05/11
Mandatory Access Control activated.
</pre>

<p>AKARI モジュールを登録する処理は環境依存であるため、問題が起こる場合があります。もし問題が発生した場合は作者（ penguin-kernel&#64;I-love.SAKURA.ne.jp ）にご連絡ください。</p>

<hr>

<p><a href="index.html.ja">目次へ戻る</a></p>
<p><a href="http://sourceforge.jp/"><img src="http://sourceforge.jp/sflogo.php?group_id=5310" width="96" height="31" alt="SourceForge.jp"></a></p>
</body>
</html>
