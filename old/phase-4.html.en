<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
<meta http-equiv="Content-Style-Type" content="text/css">
<title>AKARI Install manual</title>
<link rel="stylesheet" href="http://tomoyo.sourceforge.jp/tomoyo.css" media="all" type="text/css">
</head>
<body>
<p style="text-align:right;"><a href="phase-4.html.ja">Japanese Page</a></p>
<p style="text-align:right;">Last modified: $Date$</p>
<h1>Phase 4: Develop policy</h1>

<p style="text-align:center;">Aim: to simplify and shorten domain policy in order to accommodate for temporary files and other permissions.</p>

<hr>

<h2><a name="4.1">Step 4.1: Patterning temporary files</a></h2>

<p>A particular domain may require many different access permissions to many different resources. Since "Enforcing Mode" allows access to only resources explicitly defined, it is important to cover all necessary resources. To do this, permissions can be patterned. A patterned permission will allow multiple domain policy entries to be shortened into a single entry.</p>

<p>This is particularly important for temporary files due to the variety of single-use pathnames involved. They can either be handled in the manner described below, or handled interactively using the policy editor. For details on handling permissions interactively, see <a href="tool-editpolicy.html.en#acl_editor">How to remove redundant ACL entries</a>.</p>

<p>Use "/usr/sbin/ccs-findtemp" to find pathnames from domain policy that are potentially temporary files:</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# /usr/sbin/ccs-findtemp &lt; /proc/ccs/domain_policy<br>
/tmp/RsACr8YD<br>
/tmp/RsXg3Aav<br>
/var/run/nscd/socket<br>
/var/spool/clientmqueue/dfoBPETPpH002933<br>
/var/spool/clientmqueue/dfoBPETf92002944<br>
/var/spool/clientmqueue/qfoBPETPpH002933<br>
/var/spool/clientmqueue/qfoBPETf92002944<br>
/var/spool/clientmqueue/xfoBPETPpH002933<br>
/var/spool/clientmqueue/xfoBPETf92002944
</td></tr>
</table>

<p>In this example, "/tmp/RsACr8YD", "/tmp/RsXg3Aav", "/var/spool/clientmqueue/dfoBPETPpH002933", "/var/spool/clientmqueue/dfoBPETf92002944", "/var/spool/clientmqueue/qfoBPETPpH002933", "/var/spool/clientmqueue/qfoBPETf92002944", "/var/spool/clientmqueue/xfoBPETPpH002933" and "/var/spool/clientmqueue/xfoBPETf92002944" can be considered to be temporary files, thus patterns can be made for these pathnames.</p>

<p>First, the type of pattern must be considered. The strings here appear to be random letters. Thus, the \? pattern which matches any one letter (other than '/') and \* pattern which matches zero or more repetition of any letters (other than '/') can be used. See <a href="policy-reference.html.en#wildcard_expression_rules">Wilcard expression rules</a> for a list of possible wildcards.</p>

<p>Use "/usr/sbin/ccs-patternize" to convert into patterns non-interactively. Rewriting rules are specified in /etc/ccs/tools/patternize.conf file, as shown below:</p>

<pre>
# This file contains rewriting rules used by ccs-patternize command.

# Domain policy consists with domain declaration lines (which start with
# &lt;kernel&gt; ) and acl declaration lines (which do not start with &lt;kernel&gt; ).
# You can refer the former using 'domain' keyword and the latter using 'acl'
# keyword.
#
# Words in each line are separated by a space character. Therefore, you can
# use 'domain[index]', 'acl[index]' for referring index'th word of the line.
# The index starts from 1, and 0 refers the whole line (i.e.
# 'domain[0]' = 'domain', 'acl[0]' = 'acl').
#
# Three operators are provided for conditional rewriting.
# '.contains' is for 'fgrep keyword' match.
# '.equals' is for 'grep ^keyword$' match.
# '.starts' is for 'grep ^keyword' match.
#
# Rewriting rules are defined using multi-lined chunks. A chunk is terminated
# by a 'rewrite' line which specifies old pattern and new pattern.
# A 'rewrite' line is evaluated only when all preceding 'domain' and 'acl'
# lines in that chunk have matched.
# Evaluation stops at first 'rewrite' line where a word matched old pattern.
# Therefore, no words are rewritten more than once.
#
# For user's convenience, new pattern can be omitted if old pattern is reused
# for new pattern.

# Please use AKARI's escape rule (e.g. '\040' rather than '\ ' for
# representing a ' ' in a word).

# Files on proc filesystem.
rewrite path_pattern proc:/self/task/\$/fdinfo/\$
rewrite path_pattern proc:/self/task/\$/fd/\$
rewrite head_pattern proc:/self/task/\$/
rewrite path_pattern proc:/self/fdinfo/\$
rewrite path_pattern proc:/self/fd/\$
rewrite head_pattern proc:/self/
rewrite path_pattern proc:/\$/task/\$/fdinfo/\$
rewrite path_pattern proc:/\$/task/\$/fd/\$
rewrite head_pattern proc:/\$/task/\$/
rewrite path_pattern proc:/\$/fdinfo/\$
rewrite path_pattern proc:/\$/fd/\$
rewrite head_pattern proc:/\$/

# Files on devpts filesystem.
rewrite path_pattern devpts:/\$

# Files on pipe filesystem.
rewrite path_pattern pipe:[\$]
rewrite path_pattern pipefs:/[\$]

# Files on / partition.
rewrite tail_pattern /etc/mtab~\$
rewrite tail_pattern /etc/ccs/policy/\*/domain_policy.conf
rewrite tail_pattern /etc/ccs/policy/\*/exception_policy.conf
rewrite tail_pattern /etc/ccs/policy/\*/manager.conf
rewrite tail_pattern /etc/ccs/policy/\*/profile.conf
rewrite tail_pattern /etc/ccs/policy/\*/

# Files on /tmp/ partition.
rewrite tail_pattern /vte\?\?\?\?\?\?
rewrite tail_pattern /.ICE-unix/\$
rewrite tail_pattern /keyring-\?\?\?\?\?\?/socket.ssh
rewrite tail_pattern /orbit-\*/bonobo-activation-register-\X.lock
rewrite tail_pattern /orbit-\*/bonobo-activation-server-\X-ior
rewrite tail_pattern /orbit-\*/linc-\*
rewrite tail_pattern /orbit-\*/
rewrite tail_pattern /sh-thd-\$
rewrite tail_pattern /zman\?\?\?\?\?\?

# Files on home directory.
rewrite tail_pattern /.ICEauthority-\?
rewrite tail_pattern /.xauth\?\?\?\?\?\?
rewrite tail_pattern /.xauth\?\?\?\?\?\?-?
rewrite tail_pattern /.local/share/applications/preferred-mail-reader.desktop.\?\?\?\?\?\?
rewrite tail_pattern /.local/share/applications/preferred-web-browser.desktop.\?\?\?\?\?\?

# Files on /var/ partition.
rewrite tail_pattern /cache/fontconfig/\X-le64.cache-3
rewrite tail_pattern /lib/gdm/.pulse/\X-default-source
rewrite tail_pattern /lib/gdm/.pulse/\X-default-sink
rewrite tail_pattern /lib/gdm/.dbus/session-bus/\X-\X
rewrite tail_pattern /run/gdm/auth-for-\*/database-\?
rewrite tail_pattern /run/gdm/auth-for-\*/database
rewrite tail_pattern /run/gdm/auth-for-\*/
rewrite tail_pattern /spool/abrt/pyhook-\*/\{\*\}/\*
rewrite tail_pattern /spool/abrt/pyhook-\*/\{\*\}/
</pre>

<p>"path_pattern" matches whole pathname, "head_pattern" matches leading pathname and "tail_pattern" matches trailing pathname.</p>

<p>Append patterns for "/tmp/Rs\?\?\?\?\?\?" and "/var/spool/clientmqueue/\*" to /etc/ccs/tools/patternize.conf file:</p>

<table border="1">
<tr><td>
rewrite tail_pattern /tmp/Rs\?\?\?\?\?\?<br>
rewrite tail_pattern /var/spool/clientmqueue/\*
</td></tr>
</table>

<p>Then, convert using "ccs-patternize" command and compare how it was changed using "ccs-diffpolicy" command:</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# ccs-savepolicy -d &gt; /tmp/old<br>
[root@tomoyo ~]# ccs-patternize &lt; /tmp/old &gt; /tmp/new<br>
[root@tomoyo ~]# ccs-diffpolicy /tmp/old /tmp/new<br>
&lt;kernel&gt; /usr/sbin/httpd<br>
<br>
file write proc:/self/task/\$/attr/fscreate<br>
delete file write proc:/self/task/2766/attr/fscreate<br>
<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /bin/mail<br>
<br>
file create /tmp/Rs\?\?\?\?\?\? 0666<br>
file read /tmp/Rs\?\?\?\?\?\?<br>
file unlink /tmp/Rs\?\?\?\?\?\?<br>
file write /tmp/Rs\?\?\?\?\?\?<br>
delete file create /tmp/RsACr8YD 0666<br>
delete file create /tmp/RsXg3Aav 0666<br>
delete file read /tmp/RsACr8YD<br>
delete file read /tmp/RsXg3Aav<br>
delete file unlink /tmp/RsACr8YD<br>
delete file unlink /tmp/RsXg3Aav<br>
delete file write /tmp/RsACr8YD<br>
delete file write /tmp/RsXg3Aav<br>
<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /bin/mail<br>
<br>
file ioctl pipefs:/[\$] 0x5413<br>
delete file ioctl pipefs:/[11895] 0x5413<br>
delete file ioctl pipefs:/[11965] 0x5413<br>
<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /bin/mail /usr/sbin/sendmail<br>
<br>
file create /var/spool/clientmqueue/\* 0660<br>
file read /var/spool/clientmqueue/\*<br>
file unlink /var/spool/clientmqueue/\*<br>
file write /var/spool/clientmqueue/\*<br>
delete file create /var/spool/clientmqueue/dfoBPETPpH002933 0660<br>
delete file create /var/spool/clientmqueue/dfoBPETf92002944 0660<br>
delete file create /var/spool/clientmqueue/qfoBPETPpH002933 0660<br>
delete file create /var/spool/clientmqueue/qfoBPETf92002944 0660<br>
delete file read /var/spool/clientmqueue/dfoBPETPpH002933<br>
delete file read /var/spool/clientmqueue/dfoBPETf92002944<br>
delete file unlink /var/spool/clientmqueue/dfoBPETPpH002933<br>
delete file unlink /var/spool/clientmqueue/dfoBPETf92002944<br>
delete file unlink /var/spool/clientmqueue/qfoBPETPpH002933<br>
delete file unlink /var/spool/clientmqueue/qfoBPETf92002944<br>
delete file unlink /var/spool/clientmqueue/xfoBPETPpH002933<br>
delete file unlink /var/spool/clientmqueue/xfoBPETf92002944<br>
delete file write /var/spool/clientmqueue/dfoBPETPpH002933<br>
delete file write /var/spool/clientmqueue/dfoBPETf92002944<br>
delete file write /var/spool/clientmqueue/qfoBPETPpH002933<br>
delete file write /var/spool/clientmqueue/qfoBPETf92002944<br>
<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /bin/ls<br>
<br>
file ioctl pipefs:/[\$] 0x5413<br>
delete file ioctl pipefs:/[11965] 0x5413<br>
</td></tr>
</table>

<p>In case the conversion did not achieve the desired result, "/tmp/new" can be edited with a text editor manually, or conversion can be retried after editing "/etc/ccs/tools/patternize.conf".</p>

<p>If the conversion has achieved the desired result, the changes can be applied to existing policy by loading the difference between the two:</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# ccs-diffpolicy /tmp/old /tmp/new | /usr/sbin/ccs-loadpolicy -d
</td></tr>
</table>

<p>To convert only specific domains, the "/usr/sbin/ccs-selectpolicy" command can be used. For example, to update only "&lt;kernel&gt; /usr/sbin/httpd" and descendent domains, do the following:</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# ccs-selectpolicy -r '&lt;kernel&gt; /usr/sbin/httpd' &lt; /proc/ccs/domain_policy &gt; /tmp/old-httpd<br>
[root@tomoyo ~]# ccs-patternize &lt; /tmp/old-httpd &gt; /tmp/new-httpd<br>
[root@tomoyo ~]# ccs-diffpolicy /tmp/old-httpd /tmp/new-httpd | ccs-loadpolicy -d
</td></tr>
</table>

<p>Conversion of a specific domain can also be managed by editing "/etc/ccs/tools/patternize.conf". The following line can be inserted before the "rewrite" line so that conversion is only done against "&lt;kernel&gt; /usr/sbin/httpd" and descendent domains:</p>

<pre>
domain.starts &lt;kernel&gt; /usr/sbin/httpd
</pre>

<br>

<hr>

<h2><a name="4.2">Step 4.2: Patterning file access permissions</a></h2>

<p>Access permissions can be patterned to accommodate for files that are not necessarily accessed in "Learning Mode". For example, the domain policy can be changed to accommodate for WWW contents:</p>

<table border="1">
<tr><td>Before</td><td>After</td></tr>
<tr><td>
&lt;kernel&gt; /usr/sbin/httpd<br>
<br>
file read /var/www/html/index.html<br>
file read /var/www/html/alice/index.html<br>
file read /var/www/html/alice/page1.html<br>
file read /var/www/html/alice/page2.html<br>
file read /var/www/html/alice/image1.jpg<br>
file read /var/www/html/alice/image2.jpg<br>
file read /var/www/html/alice/archive/page1.html<br>
file read /var/www/html/alice/archive/image1.jpg<br>
file read /var/www/html/alice/archive/page2.html<br>
file read /var/www/html/alice/archive/image2.jpg<br>
file read /var/www/html/bob/index.html<br>
file read /var/www/html/bob/page1.html<br>
file read /var/www/html/bob/page2.html<br>
file read /var/www/html/bob/image1.jpg<br>
file read /var/www/html/bob/image2.jpg<br>
file read /var/www/html/bob/archive/page1.html<br>
file read /var/www/html/bob/archive/image1.jpg<br>
file read /var/www/html/bob/archive/page2.html<br>
file read /var/www/html/bob/archive/image2.jpg
</td><td>
&lt;kernel&gt; /usr/sbin/httpd<br>
<br>
file read /var/www/html/\*.html<br>
file read /var/www/html/\{\*\}/\*.html<br>
file read /var/www/html/\{\*\}/\*.jpg<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
</td></tr>
</table>

<p>Domain policy can be further simplified by placing directives in the exception policy, such as:</p>

<table border="1">
<tr><td>
path_group WEB-CONTENTS /var/www/html/\*.html<br>
path_group WEB-CONTENTS /var/www/html/\{\*\}/\*.html<br>
path_group WEB-CONTENTS /var/www/html/\{\*\}/\*.jpg<br>
</td></tr>
</table>

<p>The following can then be defined in domain policy:</p>

<table border="1">
<tr><td>
&lt;kernel&gt; /usr/sbin/httpd<br>
<br>
file read @WEB-CONTENTS
</td></tr>
</table>

<p>The above conversion using "/usr/sbin/ccs-editpolicy" can also be managed using "/usr/sbin/ccs-patternize". Add "path_group" to the exception policy like above (as "/usr/sbin/ccs-patternize" only deals with domain policy), and the following can then be added to "/etc/ccs/tools/patternize.conf" similar to <a href="#4.1">Step 4.1: Patterning temporary files</a>:</p>

<pre>
domain.equals &lt;kernel&gt; /usr/sbin/httpd
acl.starts file read
rewrite path_pattern /var/www/html/\*.html @WEB-CONTENTS

domain.equals &lt;kernel&gt; /usr/sbin/httpd
acl.starts file read
rewrite path_pattern /var/www/html/\{\*\}/\*.html @WEB-CONTENTS

domain.equals &lt;kernel&gt; /usr/sbin/httpd
acl.starts file read
rewrite path_pattern /var/www/html/\{\*\}/\*.jpg @WEB-CONTENTS
</pre>

<br>

<hr>

<h2><a name="4.3">Step 4.3: Patterning numeric permissions</a></h2>

<p>Patterns can be used for numeric parameters such as the creation mode of a file or a network's port numbers.</p>

<p>The following domain policy example permits "/usr/sbin/httpd" to accept connections from port numbers between 1024 and 65535:</p>

<table border="1">
<tr><td>Before</td><td>After</td></tr>
<tr><td>
&lt;kernel&gt; /usr/sbin/httpd<br>
<br>
network inet stream accept 0:0:0:0:0:ffff:c0a8:801 3810<br>
network inet stream accept 0:0:0:0:0:ffff:c0a8:801 3829<br>
network inet stream accept 0:0:0:0:0:ffff:c0a8:801 3829
</td><td>
&lt;kernel&gt; /usr/sbin/httpd<br>
<br>
network inet stream accept 0:0:0:0:0:ffff:c0a8:801 1024-65535<br>
<br>
<br>
</td></tr>
</table>

<p>Domain policy can be further simplified by placing directives in the exception policy, such as:</p>

<table border="1">
<tr><td>
number_group WEB-CLIENT-PORTS 1024-65535
</td></tr>
</table>

<p>The following can then be defined in domain policy:</p>

<table border="1">
<tr><td>
&lt;kernel&gt; /usr/sbin/httpd<br>
<br>
network inet stream accept 0:0:0:0:0:ffff:c0a8:801 @WEB-CLIENT-PORTS<br>
</td></tr>
</table>

<p>The above conversion using "/usr/sbin/ccs-editpolicy" can also be managed using "/usr/sbin/ccs-patternize". Add "number_group" to the exception policy like above (as "/usr/sbin/ccs-patternize" only deals with domain policy), and the following can then be added to "/etc/ccs/tools/patternize.conf" similar to <a href="#4.1">Step 4.1: Patterning temporary files</a>:</p>

<pre>
domain.equals &lt;kernel&gt; /usr/sbin/httpd
acl.starts network inet stream accept
rewrite number_pattern 1024-65535 @WEB-CLIENT-PORTS
</pre>

<br>

<hr>

<h2><a name="4.4">Step 4.4: Patterning network access permissions</a></h2>

<p>Patterns can be made for IP addresses in domain policy, for example:</p>

<table border="1">
<tr><td>Before</td><td>After</td></tr>
<tr><td>
&lt;kernel&gt; /usr/sbin/httpd<br>
<br>
network inet stream accept 0:0:0:0:0:0:0:1 @WEB-CLIENT-PORTS<br>
network inet stream accept 0:0:0:0:0:ffff:a00:1 @WEB-CLIENT-PORTS<br>
network inet stream accept 0:0:0:0:0:ffff:a00:a1 @WEB-CLIENT-PORTS<br>
network inet stream accept 10.0.0.10 @WEB-CLIENT-PORTS<br>
network inet stream accept 10.0.0.200 @WEB-CLIENT-PORTS
</td><td>
&lt;kernel&gt; /usr/sbin/httpd<br>
<br>
network inet stream accept 0:0:0:0:0:0:0:1 @WEB-CLIENT-PORTS<br>
network inet stream accept 0:0:0:0:0:ffff:a00:1-0:0:0:0:0:ffff:a00:ff @WEB-CLIENT-PORTS<br>
network inet stream accept 10.0.0.1-10.0.0.255 @WEB-CLIENT-PORTS<br>
<br>
<br>
</td></tr>
</table>

<p>Domain policy can be further simplified by placing directives in the exception policy, such as:</p>

<table border="1">
<tr><td>
address_group WEB-CLIENT-ADDRESS 0:0:0:0:0:0:0:1<br>
address_group WEB-CLIENT-ADDRESS 0:0:0:0:0:ffff:a00:1-0:0:0:0:0:ffff:a00:ff<br>
address_group WEB-CLIENT-ADDRESS 10.0.0.1-10.0.0.255
</td></tr>
</table>

<p>The following can then be defined in domain policy:</p>

<table border="1">
<tr><td>
&lt;kernel&gt; /usr/sbin/httpd<br>
<br>
network inet stream accept @WEB-CLIENT-ADDRESS @WEB-CLIENT-PORTS
</td></tr>
</table>

<p>The above conversion using "/usr/sbin/ccs-editpolicy" can also be managed using "/usr/sbin/ccs-patternize". Add "address_group" to the exception policy like above (as "/usr/sbin/ccs-patternize" only deals with domain policy), and the following can then be added to "/etc/ccs/tools/patternize.conf" similar to <a href="#4.1">Step 4.1: Patterning temporary files</a>:</p>

<pre>
domain.equals &lt;kernel&gt; /usr/sbin/httpd
acl.starts network inet stream accept
rewrite address_pattern 0:0:0:0:0:0:0:1 @WEB-CLIENT-ADDRESS

domain.equals &lt;kernel&gt; /usr/sbin/httpd
acl.starts network inet stream accept
rewrite address_pattern 0:0:0:0:0:ffff:a00:1-0:0:0:0:0:ffff:a00:ff @WEB-CLIENT-ADDRESS

domain.equals &lt;kernel&gt; /usr/sbin/httpd
acl.starts network inet stream accept
rewrite address_pattern 10.0.0.1-10.0.0.255 @WEB-CLIENT-ADDRESS
</pre>

<hr>

<h2><a name="4.5">Step 4.5: Review gathered permissions</a></h2>

<p>Once you think you have done everything you want to allow Apache to do, run the policy editor and change the profile number to 2.</p>

<p>Note that Apache may have executed some external programs (e.g. "/bin/sh", "/usr/bin/perl", "/usr/lib/sendmail") and thus has some descendent domains. Be sure to change the profile number for all descendent domains as well.</p>

<p>Choose target domains, press the "s" key, enter "2" and press the "Enter" key:</p>

<p><img src="editpolicy-httpd-set-profile2.png" alt="editpolicy-httpd-set-profile2.png" width="720" height="400"></p>

<p>Now the profile number of the "/usr/sbin/httpd" domain and its descendants have changed to 2:</p>

<p><img src="editpolicy-httpd-profile2.png" alt="editpolicy-httpd-profile2.png" width="720" height="400"></p>

<p>Quit the policy editor and continue using Apache:</p>

<p><img src="operation-permissive.png" alt="operation-permissive.png" width="723" height="561"></p>

<p>You can check "/proc/ccs/stat" for how many times policy violations have occurred and the last time a policy violation occurred:</p>

<pre>
[root@tomoyo ~]# cat /proc/ccs/stat
Policy update:                              1571 (Last: 2010/12/25 16:10:48)
Policy violation in learning mode:           453 (Last: 2010/12/25 15:33:21)
Policy violation in permissive mode:          22 (Last: 2010/12/25 15:47:10)
Policy violation in enforcing mode:            0
Memory used by policy:                    165728
Memory used by audit log:                      0 (Quota:   16777216)
Memory used by query message:                  0 (Quota:    1048576)
Total memory used:                        165728
</pre>

<p>If audit logs have been configured at <a href="phase-2.html.en#2.5">Step 2.5: Save audit logs (optional)</a>, necessary permissions can be picked up from "/var/log/tomoyo/reject_002.log":</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# cat /var/log/tomoyo/reject_002.log<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=1545499 major=8 minor=1 perm=0755 type=file } path1.parent={ uid=0 gid=0 ino=1540116 perm=0755 } exec={ realpath="/usr/bin/id" argc=1 envc=7 argv[]={ "id" } envp[]={ "TERM=vt100" "PATH=/sbin:/usr/sbin:/bin:/usr/bin" "PWD=/usr/share/horde/admin" "LANG=en_US.UTF-8" "SHLVL=3" "LANGUAGE=en_US.UTF-8" "_=/usr/bin/id" } }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh<br>
file execute /usr/bin/id<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
use_profile 2<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
use_group 0<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=1545499 major=8 minor=1 perm=0755 type=file } path1.parent={ uid=0 gid=0 ino=1540116 perm=0755 } exec={ realpath="/usr/bin/id" argc=1 envc=7 argv[]={ "id" } envp[]={ "TERM=vt100" "PATH=/sbin:/usr/sbin:/bin:/usr/bin" "PWD=/usr/share/horde/admin" "LANG=en_US.UTF-8" "SHLVL=3" "LANGUAGE=en_US.UTF-8" "_=/usr/bin/id" } }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
misc env TERM<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=1545499 major=8 minor=1 perm=0755 type=file } path1.parent={ uid=0 gid=0 ino=1540116 perm=0755 } exec={ realpath="/usr/bin/id" argc=1 envc=7 argv[]={ "id" } envp[]={ "TERM=vt100" "PATH=/sbin:/usr/sbin:/bin:/usr/bin" "PWD=/usr/share/horde/admin" "LANG=en_US.UTF-8" "SHLVL=3" "LANGUAGE=en_US.UTF-8" "_=/usr/bin/id" } }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
misc env PATH<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=1545499 major=8 minor=1 perm=0755 type=file } path1.parent={ uid=0 gid=0 ino=1540116 perm=0755 } exec={ realpath="/usr/bin/id" argc=1 envc=7 argv[]={ "id" } envp[]={ "TERM=vt100" "PATH=/sbin:/usr/sbin:/bin:/usr/bin" "PWD=/usr/share/horde/admin" "LANG=en_US.UTF-8" "SHLVL=3" "LANGUAGE=en_US.UTF-8" "_=/usr/bin/id" } }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
misc env PWD<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=1545499 major=8 minor=1 perm=0755 type=file } path1.parent={ uid=0 gid=0 ino=1540116 perm=0755 } exec={ realpath="/usr/bin/id" argc=1 envc=7 argv[]={ "id" } envp[]={ "TERM=vt100" "PATH=/sbin:/usr/sbin:/bin:/usr/bin" "PWD=/usr/share/horde/admin" "LANG=en_US.UTF-8" "SHLVL=3" "LANGUAGE=en_US.UTF-8" "_=/usr/bin/id" } }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
misc env LANG<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=1545499 major=8 minor=1 perm=0755 type=file } path1.parent={ uid=0 gid=0 ino=1540116 perm=0755 } exec={ realpath="/usr/bin/id" argc=1 envc=7 argv[]={ "id" } envp[]={ "TERM=vt100" "PATH=/sbin:/usr/sbin:/bin:/usr/bin" "PWD=/usr/share/horde/admin" "LANG=en_US.UTF-8" "SHLVL=3" "LANGUAGE=en_US.UTF-8" "_=/usr/bin/id" } }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
misc env SHLVL<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=1545499 major=8 minor=1 perm=0755 type=file } path1.parent={ uid=0 gid=0 ino=1540116 perm=0755 } exec={ realpath="/usr/bin/id" argc=1 envc=7 argv[]={ "id" } envp[]={ "TERM=vt100" "PATH=/sbin:/usr/sbin:/bin:/usr/bin" "PWD=/usr/share/horde/admin" "LANG=en_US.UTF-8" "SHLVL=3" "LANGUAGE=en_US.UTF-8" "_=/usr/bin/id" } }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
misc env LANGUAGE<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=1545499 major=8 minor=1 perm=0755 type=file } path1.parent={ uid=0 gid=0 ino=1540116 perm=0755 } exec={ realpath="/usr/bin/id" argc=1 envc=7 argv[]={ "id" } envp[]={ "TERM=vt100" "PATH=/sbin:/usr/sbin:/bin:/usr/bin" "PWD=/usr/share/horde/admin" "LANG=en_US.UTF-8" "SHLVL=3" "LANGUAGE=en_US.UTF-8" "_=/usr/bin/id" } }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
misc env _<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=1245682 major=8 minor=1 perm=0644 type=file } path1.parent={ uid=0 gid=0 ino=1245419 perm=0755 }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
file read /etc/selinux/config<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=12 major=0 minor=15 perm=0444 type=file } path1.parent={ uid=0 gid=0 ino=496 perm=0755 }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
file read selinuxfs:/mls<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
network unix stream connect /var/run/setrans/.setrans-unix<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=4026531844 major=0 minor=3 perm=0444 type=file } path1.parent={ uid=0 gid=0 ino=1 perm=0555 }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
file read proc:/filesystems<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=1547485 major=8 minor=1 perm=0644 type=file } path1.parent={ uid=0 gid=0 ino=1540124 perm=0755 }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
file read /usr/lib/locale/locale-archive<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
network unix stream connect /var/run/setrans/.setrans-unix<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
network unix stream connect /var/run/nscd/socket<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
network unix stream connect /var/run/nscd/socket<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=1245231 major=8 minor=1 perm=0644 type=file } path1.parent={ uid=0 gid=0 ino=1245185 perm=0755 }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
file read /etc/nsswitch.conf<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=1245924 major=8 minor=1 perm=0644 type=file } path1.parent={ uid=0 gid=0 ino=1245185 perm=0755 }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
file read /etc/passwd<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
network unix stream connect /var/run/nscd/socket<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
network unix stream connect /var/run/nscd/socket<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=1245902 major=8 minor=1 perm=0644 type=file } path1.parent={ uid=0 gid=0 ino=1245185 perm=0755 }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
file read /etc/group<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=1245902 major=8 minor=1 perm=0644 type=file } path1.parent={ uid=0 gid=0 ino=1245185 perm=0755 }<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
file read /etc/group
</td></tr>
</table>

<br>
<p>These can be compressed with the "ccs-sortpolicy" command:</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# cat /var/log/tomoyo/reject_002.log | /usr/sbin/ccs-sortpolicy<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler }<br>
file execute /usr/bin/id<br>
<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
use_profile 2<br>
<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler }<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=12 major=0 minor=15 perm=0444 type=file } path1.parent={ uid=0 gid=0 ino=496 perm=0755 }<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=1245231 major=8 minor=1 perm=0644 type=file } path1.parent={ uid=0 gid=0 ino=1245185 perm=0755 }<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=1245682 major=8 minor=1 perm=0644 type=file } path1.parent={ uid=0 gid=0 ino=1245419 perm=0755 }<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=1245902 major=8 minor=1 perm=0644 type=file } path1.parent={ uid=0 gid=0 ino=1245185 perm=0755 }<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=1245924 major=8 minor=1 perm=0644 type=file } path1.parent={ uid=0 gid=0 ino=1245185 perm=0755 }<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=1545499 major=8 minor=1 perm=0755 type=file } path1.parent={ uid=0 gid=0 ino=1540116 perm=0755 } exec={ realpath="/usr/bin/id" argc=1 envc=7 argv[]={ "id" } envp[]={ "TERM=vt100" "PATH=/sbin:/usr/sbin:/bin:/usr/bin" "PWD=/usr/share/horde/admin" "LANG=en_US.UTF-8" "SHLVL=3" "LANGUAGE=en_US.UTF-8" "_=/usr/bin/id" } }<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=1547485 major=8 minor=1 perm=0644 type=file } path1.parent={ uid=0 gid=0 ino=1540124 perm=0755 }<br>
#2010/12/25 15:47:10# profile=2 mode=permissive granted=no (global-pid=3390) task={ pid=3390 ppid=3386 uid=48 gid=48 euid=48 egid=48 suid=48 sgid=48 fsuid=48 fsgid=48 type!=execute_handler } path1={ uid=0 gid=0 ino=4026531844 major=0 minor=3 perm=0444 type=file } path1.parent={ uid=0 gid=0 ino=1 perm=0555 }<br>
file read /etc/group<br>
file read /etc/nsswitch.conf<br>
file read /etc/passwd<br>
file read /etc/selinux/config<br>
file read /usr/lib/locale/locale-archive<br>
file read proc:/filesystems<br>
file read selinuxfs:/mls<br>
misc env LANG<br>
misc env LANGUAGE<br>
misc env PATH<br>
misc env PWD<br>
misc env SHLVL<br>
misc env TERM<br>
misc env _<br>
network unix stream connect /var/run/nscd/socket<br>
network unix stream connect /var/run/setrans/.setrans-unix<br>
use_group 0
</td></tr>
</table>

<p>These compressed logs can be saved into a temporary file. These can then be edited as required and appended to current policy using the "ccs-loadpolicy" command:</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# cat /var/log/tomoyo/reject_002.log | /usr/sbin/ccs-sortpolicy &gt; ~/rejected.log<br>
[root@tomoyo ~]# emacs ~/rejected.log<br>
[root@tomoyo ~]# /usr/sbin/ccs-loadpolicy -d &lt; ~/rejected.log
</td></tr>
</table>

<p>Since you are editing policy currently loaded into the kernel, changes will be lost if you shutdown the system without saving. Save "exception_policy.conf", "domain_poilicy.conf", "profile.conf" and "manager.conf" using this command:</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# /usr/sbin/ccs-savepolicy
</td></tr>
</table>

<p>If your purpose of using AKARI is for just analysis, this point is the goal of this procedure.</p>

<p>If your purpose of using AKARI is for protection, proceed to next step.</p>

<hr>

<h2><a name="4.6">Step 4.6: Adding conditions to ACLs (optional)</a></h2>

<p>Conditions can be added to individual ACLs if necessary, allowing the enforcement of system user ID based access control.</p>

<p>Suppose the following are defined in the exception policy:</p>

<table border="1">
<tr><td>
path_group HOME-FTP-FILE /home/\*/ftp/\*<br>
path_group HOME-FTP-FILE /home/\*/ftp/\{\*\}/\*<br>
path_group HOME-FTP-DIR  /home/\*/ftp/\*/<br>
path_group HOME-FTP-DIR  /home/\*/ftp/\{\*\}/<br>
path_group HOME-SMB-FILE /home/\*/samba/\*<br>
path_group HOME-SMB-FILE /home/\*/samba/\{\*\}/\*<br>
path_group HOME-SMB-DIR  /home/\*/samba/\*/<br>
path_group HOME-SMB-DIR  /home/\*/samba/\{\*\}/
</td></tr>
</table>

<p>If a non-anonymous FTP service needs to be protected, conditions can be added to forbid access to directories outside the user's home directory. It is recommended to expose only directories under a specific directory rather than the whole home directory to limit damage if the service is compromised. For example, if "/usr/sbin/vsftpd" is used, the following may be added to domain policy:</p>

<table border="1">
<tr><td>Before</td><td>After</td></tr>
<tr><td>
&lt;kernel&gt; /usr/sbin/vsftpd<br>
<br>
file read @HOME-FTP-FILE<br>
file write @HOME-FTP-FILE<br>
file mkdir @HOME-FTP-DIR 0755<br>
file rmdir @HOME-FTP-DIR<br>
file create @HOME-FTP-FILE 0644<br>
file truncate @HOME-FTP-FILE<br>
file unlink @HOME-FTP-FILE<br>
file rename @HOME-FTP-FILE @HOME-FTP-FILE<br>
file rename @HOME-FTP-DIR @HOME-FTP-DIR
</td><td>
&lt;kernel&gt; /usr/sbin/vsftpd<br>
<br>
file read @HOME-FTP-FILE task.uid=path1.uid<br>
file write @HOME-FTP-FILE task.uid=path1.uid<br>
file mkdir @HOME-FTP-DIR 0755 task.uid=path1.parent.uid<br>
file rmdir @HOME-FTP-DIR task.uid=path1.uid<br>
file create @HOME-FTP-FILE 0644 task.uid=path1.parent.uid<br>
file truncate @HOME-FTP-FILE task.uid=path1.uid<br>
file unlink @HOME-FTP-FILE task.uid=path1.uid<br>
file rename @HOME-FTP-FILE @HOME-FTP-FILE task.uid=path1.parent.uid task.uid=path2.parent.uid<br>
file rename @HOME-FTP-DIR @HOME-FTP-DIR task.uid=path1.parent.uid task.uid=path2.parent.uid
</td></tr>
</table>

<p>If a Samba service needs to be protected, the following may be added to domain policy. Again, a minimum of directories should be exposed rather than the whole home directory:</p>

<table border="1">
<tr><td>Before</td><td>After</td></tr>
<tr><td>
&lt;kernel&gt; /usr/sbin/smbd<br>
<br>
file read @HOME-SMB-FILE<br>
file write @HOME-SMB-FILE<br>
file mkdir @HOME-SMB-DIR 0755<br>
file rmdir @HOME-SMB-DIR<br>
file create @HOME-SMB-FILE 0644<br>
file truncate @HOME-SMB-FILE<br>
file unlink @HOME-SMB-FILE<br>
file rename @HOME-SMB-FILE @HOME-SMB-FILE<br>
file rename @HOME-SMB-DIR @HOME-SMB-DIR
</td><td>
&lt;kernel&gt; /usr/sbin/smbd<br>
<br>
file read @HOME-SMB-FILE task.euid=path1.uid<br>
file write @HOME-SMB-FILE task.euid=path1.uid<br>
file mkdir @HOME-SMB-DIR 0755 task.euid=path1.parent.uid<br>
file rmdir @HOME-SMB-DIR task.euid=path1.uid<br>
file create @HOME-SMB-FILE 0644 task.euid=path1.parent.uid<br>
file truncate @HOME-SMB-FILE task.euid=path1.uid<br>
file unlink @HOME-SMB-FILE task.euid=path1.uid<br>
file rename @HOME-SMB-FILE @HOME-SMB-FILE task.euid=path1.parent.uid task.euid=path2.parent.uid<br>
file rename @HOME-SMB-DIR @HOME-SMB-DIR task.euid=path1.parent.uid task.euid=path2.parent.uid<br>
</td></tr>
</table>

<p>If an SSH service needs to be protected, the following may be added to domain policy to forbid login as "root" user:</p>

<table border="1">
<tr><td>Before</td><td>After</td></tr>
<tr><td>
&lt;kernel&gt; /usr/sbin/sshd<br>
<br>
file execute /bin/bash exec.realpath="/bin/bash" exec.argv[0]="-bash"
</td><td>
&lt;kernel&gt; /usr/sbin/sshd<br>
<br>
file execute /bin/bash exec.realpath="/bin/bash" exec.argv[0]="-bash" task.uid!=0 task.euid!=0
</td></tr>
</table>

<p>See <a href="policy-reference.html.en#conditional_acl">Using conditional ACL</a> for details on the conditionals supported.</p>

<p>Please note that very fine grained access logs can be generated by running "convert-audit-log" before running "ccs-sortpolicy". However, the access logs created with this method are too strict for appending to domain policy. If you wish to do so, the conditions must first be loosened. This shows example output:</p>

<table border="1">
<tr><td>
[root@tomoyo ~]# cat /var/log/tomoyo/reject_002.log | /usr/lib/ccs/convert-audit-log | /usr/sbin/ccs-sortpolicy<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh<br>
<br>
file execute /usr/bin/id task.pid=3390 task.ppid=3386 task.uid=48 task.gid=48 task.euid=48 task.egid=48 task.suid=48 task.sgid=48 task.fsuid=48 task.fsgid=48 task.type!=execute_handler path1.uid=0 path1.gid=0 path1.ino=1545499 path1.major=8 path1.minor=1 path1.perm=0755 path1.type=file path1.parent.uid=0 path1.parent.gid=0 path1.parent.ino=1540116 path1.parent.perm=0755 exec.realpath="/usr/bin/id" exec.argc=1 exec.envc=7 exec.argv[0]="id" exec.envp["TERM"]="vt100" exec.envp["PATH"]="/sbin:/usr/sbin:/bin:/usr/bin" exec.envp["PWD"]="/usr/share/horde/admin" exec.envp["LANG"]="en_US.UTF-8" exec.envp["SHLVL"]="3" exec.envp["LANGUAGE"]="en_US.UTF-8" exec.envp["_"]="/usr/bin/id"<br>
<br>
&lt;kernel&gt; /usr/sbin/httpd /bin/sh /usr/bin/id<br>
<br>
file read /etc/group task.pid=3390 task.ppid=3386 task.uid=48 task.gid=48 task.euid=48 task.egid=48 task.suid=48 task.sgid=48 task.fsuid=48 task.fsgid=48 task.type!=execute_handler path1.uid=0 path1.gid=0 path1.ino=1245902 path1.major=8 path1.minor=1 path1.perm=0644 path1.type=file path1.parent.uid=0 path1.parent.gid=0 path1.parent.ino=1245185 path1.parent.perm=0755<br>
file read /etc/nsswitch.conf task.pid=3390 task.ppid=3386 task.uid=48 task.gid=48 task.euid=48 task.egid=48 task.suid=48 task.sgid=48 task.fsuid=48 task.fsgid=48 task.type!=execute_handler path1.uid=0 path1.gid=0 path1.ino=1245231 path1.major=8 path1.minor=1 path1.perm=0644 path1.type=file path1.parent.uid=0 path1.parent.gid=0 path1.parent.ino=1245185 path1.parent.perm=0755<br>
file read /etc/passwd task.pid=3390 task.ppid=3386 task.uid=48 task.gid=48 task.euid=48 task.egid=48 task.suid=48 task.sgid=48 task.fsuid=48 task.fsgid=48 task.type!=execute_handler path1.uid=0 path1.gid=0 path1.ino=1245924 path1.major=8 path1.minor=1 path1.perm=0644 path1.type=file path1.parent.uid=0 path1.parent.gid=0 path1.parent.ino=1245185 path1.parent.perm=0755<br>
file read /etc/selinux/config task.pid=3390 task.ppid=3386 task.uid=48 task.gid=48 task.euid=48 task.egid=48 task.suid=48 task.sgid=48 task.fsuid=48 task.fsgid=48 task.type!=execute_handler path1.uid=0 path1.gid=0 path1.ino=1245682 path1.major=8 path1.minor=1 path1.perm=0644 path1.type=file path1.parent.uid=0 path1.parent.gid=0 path1.parent.ino=1245419 path1.parent.perm=0755<br>
file read /usr/lib/locale/locale-archive task.pid=3390 task.ppid=3386 task.uid=48 task.gid=48 task.euid=48 task.egid=48 task.suid=48 task.sgid=48 task.fsuid=48 task.fsgid=48 task.type!=execute_handler path1.uid=0 path1.gid=0 path1.ino=1547485 path1.major=8 path1.minor=1 path1.perm=0644 path1.type=file path1.parent.uid=0 path1.parent.gid=0 path1.parent.ino=1540124 path1.parent.perm=0755<br>
file read proc:/filesystems task.pid=3390 task.ppid=3386 task.uid=48 task.gid=48 task.euid=48 task.egid=48 task.suid=48 task.sgid=48 task.fsuid=48 task.fsgid=48 task.type!=execute_handler path1.uid=0 path1.gid=0 path1.ino=4026531844 path1.major=0 path1.minor=3 path1.perm=0444 path1.type=file path1.parent.uid=0 path1.parent.gid=0 path1.parent.ino=1 path1.parent.perm=0555<br>
file read selinuxfs:/mls task.pid=3390 task.ppid=3386 task.uid=48 task.gid=48 task.euid=48 task.egid=48 task.suid=48 task.sgid=48 task.fsuid=48 task.fsgid=48 task.type!=execute_handler path1.uid=0 path1.gid=0 path1.ino=12 path1.major=0 path1.minor=15 path1.perm=0444 path1.type=file path1.parent.uid=0 path1.parent.gid=0 path1.parent.ino=496 path1.parent.perm=0755<br>
misc env LANG task.pid=3390 task.ppid=3386 task.uid=48 task.gid=48 task.euid=48 task.egid=48 task.suid=48 task.sgid=48 task.fsuid=48 task.fsgid=48 task.type!=execute_handler path1.uid=0 path1.gid=0 path1.ino=1545499 path1.major=8 path1.minor=1 path1.perm=0755 path1.type=file path1.parent.uid=0 path1.parent.gid=0 path1.parent.ino=1540116 path1.parent.perm=0755 exec.realpath="/usr/bin/id" exec.argc=1 exec.envc=7 exec.argv[0]="id" exec.envp["TERM"]="vt100" exec.envp["PATH"]="/sbin:/usr/sbin:/bin:/usr/bin" exec.envp["PWD"]="/usr/share/horde/admin" exec.envp["LANG"]="en_US.UTF-8" exec.envp["SHLVL"]="3" exec.envp["LANGUAGE"]="en_US.UTF-8" exec.envp["_"]="/usr/bin/id"<br>
misc env LANGUAGE task.pid=3390 task.ppid=3386 task.uid=48 task.gid=48 task.euid=48 task.egid=48 task.suid=48 task.sgid=48 task.fsuid=48 task.fsgid=48 task.type!=execute_handler path1.uid=0 path1.gid=0 path1.ino=1545499 path1.major=8 path1.minor=1 path1.perm=0755 path1.type=file path1.parent.uid=0 path1.parent.gid=0 path1.parent.ino=1540116 path1.parent.perm=0755 exec.realpath="/usr/bin/id" exec.argc=1 exec.envc=7 exec.argv[0]="id" exec.envp["TERM"]="vt100" exec.envp["PATH"]="/sbin:/usr/sbin:/bin:/usr/bin" exec.envp["PWD"]="/usr/share/horde/admin" exec.envp["LANG"]="en_US.UTF-8" exec.envp["SHLVL"]="3" exec.envp["LANGUAGE"]="en_US.UTF-8" exec.envp["_"]="/usr/bin/id"<br>
misc env PATH task.pid=3390 task.ppid=3386 task.uid=48 task.gid=48 task.euid=48 task.egid=48 task.suid=48 task.sgid=48 task.fsuid=48 task.fsgid=48 task.type!=execute_handler path1.uid=0 path1.gid=0 path1.ino=1545499 path1.major=8 path1.minor=1 path1.perm=0755 path1.type=file path1.parent.uid=0 path1.parent.gid=0 path1.parent.ino=1540116 path1.parent.perm=0755 exec.realpath="/usr/bin/id" exec.argc=1 exec.envc=7 exec.argv[0]="id" exec.envp["TERM"]="vt100" exec.envp["PATH"]="/sbin:/usr/sbin:/bin:/usr/bin" exec.envp["PWD"]="/usr/share/horde/admin" exec.envp["LANG"]="en_US.UTF-8" exec.envp["SHLVL"]="3" exec.envp["LANGUAGE"]="en_US.UTF-8" exec.envp["_"]="/usr/bin/id"<br>
misc env PWD task.pid=3390 task.ppid=3386 task.uid=48 task.gid=48 task.euid=48 task.egid=48 task.suid=48 task.sgid=48 task.fsuid=48 task.fsgid=48 task.type!=execute_handler path1.uid=0 path1.gid=0 path1.ino=1545499 path1.major=8 path1.minor=1 path1.perm=0755 path1.type=file path1.parent.uid=0 path1.parent.gid=0 path1.parent.ino=1540116 path1.parent.perm=0755 exec.realpath="/usr/bin/id" exec.argc=1 exec.envc=7 exec.argv[0]="id" exec.envp["TERM"]="vt100" exec.envp["PATH"]="/sbin:/usr/sbin:/bin:/usr/bin" exec.envp["PWD"]="/usr/share/horde/admin" exec.envp["LANG"]="en_US.UTF-8" exec.envp["SHLVL"]="3" exec.envp["LANGUAGE"]="en_US.UTF-8" exec.envp["_"]="/usr/bin/id"<br>
misc env SHLVL task.pid=3390 task.ppid=3386 task.uid=48 task.gid=48 task.euid=48 task.egid=48 task.suid=48 task.sgid=48 task.fsuid=48 task.fsgid=48 task.type!=execute_handler path1.uid=0 path1.gid=0 path1.ino=1545499 path1.major=8 path1.minor=1 path1.perm=0755 path1.type=file path1.parent.uid=0 path1.parent.gid=0 path1.parent.ino=1540116 path1.parent.perm=0755 exec.realpath="/usr/bin/id" exec.argc=1 exec.envc=7 exec.argv[0]="id" exec.envp["TERM"]="vt100" exec.envp["PATH"]="/sbin:/usr/sbin:/bin:/usr/bin" exec.envp["PWD"]="/usr/share/horde/admin" exec.envp["LANG"]="en_US.UTF-8" exec.envp["SHLVL"]="3" exec.envp["LANGUAGE"]="en_US.UTF-8" exec.envp["_"]="/usr/bin/id"<br>
misc env TERM task.pid=3390 task.ppid=3386 task.uid=48 task.gid=48 task.euid=48 task.egid=48 task.suid=48 task.sgid=48 task.fsuid=48 task.fsgid=48 task.type!=execute_handler path1.uid=0 path1.gid=0 path1.ino=1545499 path1.major=8 path1.minor=1 path1.perm=0755 path1.type=file path1.parent.uid=0 path1.parent.gid=0 path1.parent.ino=1540116 path1.parent.perm=0755 exec.realpath="/usr/bin/id" exec.argc=1 exec.envc=7 exec.argv[0]="id" exec.envp["TERM"]="vt100" exec.envp["PATH"]="/sbin:/usr/sbin:/bin:/usr/bin" exec.envp["PWD"]="/usr/share/horde/admin" exec.envp["LANG"]="en_US.UTF-8" exec.envp["SHLVL"]="3" exec.envp["LANGUAGE"]="en_US.UTF-8" exec.envp["_"]="/usr/bin/id"<br>
misc env _ task.pid=3390 task.ppid=3386 task.uid=48 task.gid=48 task.euid=48 task.egid=48 task.suid=48 task.sgid=48 task.fsuid=48 task.fsgid=48 task.type!=execute_handler path1.uid=0 path1.gid=0 path1.ino=1545499 path1.major=8 path1.minor=1 path1.perm=0755 path1.type=file path1.parent.uid=0 path1.parent.gid=0 path1.parent.ino=1540116 path1.parent.perm=0755 exec.realpath="/usr/bin/id" exec.argc=1 exec.envc=7 exec.argv[0]="id" exec.envp["TERM"]="vt100" exec.envp["PATH"]="/sbin:/usr/sbin:/bin:/usr/bin" exec.envp["PWD"]="/usr/share/horde/admin" exec.envp["LANG"]="en_US.UTF-8" exec.envp["SHLVL"]="3" exec.envp["LANGUAGE"]="en_US.UTF-8" exec.envp["_"]="/usr/bin/id"<br>
network unix stream connect /var/run/nscd/socket task.pid=3390 task.ppid=3386 task.uid=48 task.gid=48 task.euid=48 task.egid=48 task.suid=48 task.sgid=48 task.fsuid=48 task.fsgid=48 task.type!=execute_handler<br>
network unix stream connect /var/run/setrans/.setrans-unix task.pid=3390 task.ppid=3386 task.uid=48 task.gid=48 task.euid=48 task.egid=48 task.suid=48 task.sgid=48 task.fsuid=48 task.fsgid=48 task.type!=execute_handler<br>
use_group 0
</td></tr>
</table>

<br>

<div class=navfooter>
<hr align="left" width="100%">
<table summary="Footer navigation table" width="100%" border="0" cellpadding="0" cellspacing="0">
<tr>
<td width="33%" align="left" valign="top">
<a href="phase-3.html.en">Prev</a>
</td>
<td width="34%" align="center" valign="top">
<a href="index.html.en">Index</a>
</td>
<td width="33%" align="right" valign="top">
<a href="phase-5.html.en">Next</a>
</td></tr>
<tr><td width="33%" align="left" valign="top">
Phase 3: Analyze a domain
</td>
<td width="34%" align="center" valign="top">
<a href="http://tomoyo.sourceforge.jp/">Home</a>
</td>
<td width="33%" align="right" valign="top">
Phase 5: Enforce policy
</td>
</tr>
</table>
</div>

<p><a href="http://sourceforge.jp/"><img src="http://sourceforge.jp/sflogo.php?group_id=5310" width="96" height="31" alt="SourceForge.jp"></a></p>
</body>
</html>
