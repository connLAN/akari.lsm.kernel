<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="ja-JP">
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="content-style-type" content="text/css">
<link rel="stylesheet" href="../media/tomoyolinux.css" media="all" type="text/css">
<title>TOMOYO Linux 1.8.x : 導入ガイド : Chapter 3</title>
</head>

<body>

<div id="titlebar">
<a href="../index.html.ja"><img src="../media/tomoyotitle.png" alt="tomoyotitle.png" width="320" height="40" border="0" align="left"></a>
</div>

<div id="navbar" class="tomoyo-documentation">
<ul id="navbarlist">
<li id="tomoyo-home"><a href="../index.html.ja" title="TOMOYO Linux ホーム">ホーム</a></li>
<li id="tomoyo-about"><a href="../about.html.ja" title="TOMOYO Linux の詳細">詳細</a></li>
<li id="tomoyo-download"><a href="../download.html.ja" title="TOMOYO Linux を入手">ダウンロード</a></li>
<li id="tomoyo-changelogs"><a href="../changelogs.html.ja" title="TOMOYO Linux 変更履歴">変更履歴</a></li>
<li id="tomoyo-documentation"><a href="../documentation.html.ja" title="公式ドキュメント">ドキュメント</a></li>
<li id="tomoyo-support"><a href="../support.html.ja" title="サポート情報">サポート</a></li>
<li id="tomoyo-links"><a href="../links.html.ja" title="Links">リンク</a></li>
</ul>
<ul id="switch-language">
<li id="tomoyo-switch-language"><a href="chapter-3.html.en" title="Go to English page">English page</a></li>
</ul>
</div>

<div id="content">

<div id="documentation">

<div class="navheader">
<p><a href="chapter-2.html.ja">&lt;前&gt;</a> <a href="index.html.ja">&lt;目次&gt;</a> <a href="chapter-4.html.ja">&lt;次&gt;</a></p>
</div>

<h2>Chapter 3: どうすれば TOMOYO Linux をインストールできますか？</h2>

<h3><a name="3.1">3.1. 私の使っているディストリビューション用のバイナリパッケージはありますか？</a></h3>

<p>TOMOYO Linux を使うには、ディストリビュータが配布しているカーネルパッケージとは別のカーネルをインストールする必要があります。インストールする方法は２通りあります。バイナリパッケージをインストールする方法と、ソースに対してパッチを当ててコンパイルする方法です。もし、利用しているディストリビューションが以下の何れかである場合、コンパイルをする必要無しに簡単にバイナリパッケージをインストールすることができます。</p>

<p>以下のディストリビューションに関してバイナリパッケージが提供されています：</p>

<ul>
<li>Fedora 11/12/13/14</li>
<li>CentOS 3.9/4.9/5.6</li>
<li>RHEL 6</li>
<li>Debian Etch/Lenny/Squeeze</li>
<li>OpenSUSE 11.0/11.1/11.2/11.3/11.4</li>
<li>Asianux 2.0/3.0</li>
<li>Ubuntu 6.06/8.04/8.10/9.04/9.10/10.04/10.10/11.04</li>
<li>Vine Linux 4.2/5.2</li>
</ul>

<p>もし、上記の何れかのディストリビューションを使用しているのであれば、<a href="chapter-3.html.ja#3.2">3.2. バイナリパッケージからのインストール</a>へと進んでください。そうではない場合には、カーネルをコンパイルする必要がありますので、<a href="chapter-3.html.ja#3.3">3.3. ソースからのインストール</a>へと進んでください。</p>

<h3><a name="3.2">3.2. バイナリパッケージからのインストール</a></h3>

<p>RPM 形式のパッケージを使用しているディストリビューションの場合、以下のようにして GPG 鍵をインポートしてください：</p>

<pre class="command">
# wget http://I-love.SAKURA.ne.jp/kumaneko-key
# rpm --import kumaneko-key
</pre>

<p>DEB 形式のパッケージを使用しているディストリビューションの場合、以下のようにして GPG 鍵をインポートしてください：</p>

<pre class="command">
# wget http://I-love.SAKURA.ne.jp/kumaneko-key
# apt-key add kumaneko-key
</pre>

<p>プロジェクトで配布しているバイナリパッケージは <a href="http://sourceforge.jp/projects/tomoyo/releases/?package_id=12016" target="_blank">SourceForge のページ</a>から手動でダウンロードすることも可能です。カーネルパッケージと管理ツールパッケージが必要です。レポジトリを使うと簡単にダウンロードできます。レポジトリを使う場合には以下のコマンドを実行してください：</p>

<p><strong>Fedora 14 (686 flavour)</strong></p>
<pre class="command">
# wget -O /etc/yum.repos.d/ccs.repo http://tomoyo.sourceforge.jp/repos-1.8/Fedora14/ccs.repo
# yum install ccs-kernel ccs-tools
</pre>

<p><strong>Fedora 13 (686 flavour)</strong></p>
<pre class="command">
# wget -O /etc/yum.repos.d/ccs.repo http://tomoyo.sourceforge.jp/repos-1.8/Fedora13/ccs.repo
# yum install ccs-kernel ccs-tools
</pre>

<p><strong>Fedora 12 (686 flavour)</strong></p>
<pre class="command">
# wget -O /etc/yum.repos.d/ccs.repo http://tomoyo.sourceforge.jp/repos-1.8/Fedora12/ccs.repo
# yum install ccs-kernel ccs-tools
</pre>

<p><strong>Fedora 11 (686-PAE flavour)</strong></p>
<pre class="command">
# wget -O /etc/yum.repos.d/ccs.repo http://tomoyo.sourceforge.jp/repos-1.8/Fedora11/ccs.repo
# yum install ccs-kernel-PAE ccs-tools
</pre>

<p><strong>RHEL 6 (686 flavour)</strong></p>
<pre class="command">
# wget -O /etc/yum.repos.d/ccs.repo http://tomoyo.sourceforge.jp/repos-1.8/RHEL6/ccs.repo
# yum install ccs-kernel ccs-tools
</pre>

<p><strong>CentOS 5.6 (686 flavour)</strong></p>
<pre class="command">
# wget -O /etc/yum.repos.d/ccs.repo http://tomoyo.sourceforge.jp/repos-1.8/CentOS5/ccs.repo
# yum install ccs-kernel ccs-tools
</pre>

<p><strong>CentOS 4.9 (686 flavour)</strong></p>
<pre class="command">
# wget -O /etc/yum.repos.d/ccs.repo http://tomoyo.sourceforge.jp/repos-1.8/CentOS4/ccs.repo
# yum install ccs-kernel-smp ccs-tools
</pre>

<p><strong>CentOS 3.9 (686 flavour)</strong></p>
<pre class="command">
# wget -O - http://tomoyo.sourceforge.jp/repos-1.8/CentOS3/ccs.repo &gt;&gt; /etc/yum.conf
# yum install ccs-kernel-smp ccs-tools
</pre>

<p><strong>Asianux 3.0 (686 flavour)</strong></p>
<pre class="command">
# wget -O /etc/yum.repos.d/ccs.repo http://tomoyo.sourceforge.jp/repos-1.8/Asianux3/ccs.repo
# yum install ccs-kernel ccs-tools
</pre>

<p><strong>Asianux 2.0 (686 flavour)</strong></p>
<pre class="command">
# wget -O /etc/yum.repos.d/ccs.repo http://tomoyo.sourceforge.jp/repos-1.8/Asianux2/ccs.repo
# yum install ccs-kernel-smp ccs-tools
</pre>

<p><strong>Vine Linux 5.2 (686 flavour)</strong></p>
<pre class="command">
# echo "repomd http://tomoyo.sourceforge.jp/repos-1.8/VineLinux5/ ./" &gt;&gt; /etc/apt/sources.list
# apt-get update
# apt-get install ccs-kernel ccs-tools
</pre>

<p><strong>Vine Linux 4.2 (686 flavour)</strong></p>
<pre class="command">
# echo "repomd http://tomoyo.sourceforge.jp/repos-1.8/VineLinux4/ ./" &gt;&gt; /etc/apt/sources.list
# apt-get update
# apt-get install ccs-kernel ccs-tools
</pre>

<p><strong>OpenSUSE 11.4 (default flavour)</strong></p>
<pre class="command">
# zypper addrepo --type=YUM http://tomoyo.sourceforge.jp/repos-1.8/SUSE11.4/ ccs
# zypper install ccs-kernel-default ccs-tools
</pre>

<p><strong>OpenSUSE 11.3 (default flavour)</strong></p>
<pre class="command">
# zypper addrepo --type=YUM http://tomoyo.sourceforge.jp/repos-1.8/SUSE11.3/ ccs
# zypper install ccs-kernel-default ccs-tools
</pre>

<p><strong>OpenSUSE 11.2 (default flavour)</strong></p>
<pre class="command">
# zypper addrepo --type=YUM http://tomoyo.sourceforge.jp/repos-1.8/SUSE11.2/ ccs
# zypper install ccs-kernel-default ccs-tools
</pre>

<p><strong>OpenSUSE 11.1 (default flavour)</strong></p>
<pre class="command">
# zypper addrepo --type=YUM http://tomoyo.sourceforge.jp/repos-1.8/SUSE11.1/ ccs
# zypper install ccs-kernel-default ccs-tools
</pre>

<p><strong>OpenSUSE 11.0 (default flavour)</strong></p>
<pre class="command">
# zypper addrepo --type=YUM http://tomoyo.sourceforge.jp/repos-1.8/SUSE11.0/ ccs
# zypper install ccs-kernel-default ccs-tools
</pre>

<p><strong>Debian Squeeze (686 flavour)</strong></p>
<pre class="command">
# echo 'deb http://tomoyo.sourceforge.jp/repos-1.8/DebianSqueeze/ ./' &gt;&gt; /etc/apt/sources.list
# apt-get update
# apt-get install linux-image-2.6-686-ccs ccs-tools
</pre>

<p><strong>Debian Lenny (686 flavour)</strong></p>
<pre class="command">
# echo 'deb http://tomoyo.sourceforge.jp/repos-1.8/DebianLenny/ ./' &gt;&gt; /etc/apt/sources.list
# apt-get update
# apt-get install linux-image-2.6-686-ccs ccs-tools
</pre>

<p><strong>Debian Etch (686 flavour)</strong></p>
<pre class="command">
# echo 'deb http://tomoyo.sourceforge.jp/repos-1.8/DebianEtch/ ./' &gt;&gt; /etc/apt/sources.list
# apt-get update
# apt-get install linux-image-2.6-686-ccs ccs-tools
</pre>

<p><strong>Ubuntu 11.04 (generic-pae flavour)</strong></p>
<pre class="command">
# echo 'deb http://tomoyo.sourceforge.jp/repos-1.8/Ubuntu11.04/ ./' &gt;&gt; /etc/apt/sources.list
# apt-get update
# apt-get install linux-generic-pae-ccs ccs-tools
</pre>

<p><strong>Ubuntu 10.10 (generic-pae flavour)</strong></p>
<pre class="command">
# echo 'deb http://tomoyo.sourceforge.jp/repos-1.8/Ubuntu10.10/ ./' &gt;&gt; /etc/apt/sources.list
# apt-get update
# apt-get install linux-generic-pae-ccs ccs-tools
</pre>

<p><strong>Ubuntu 10.04 (generic-pae flavour)</strong></p>
<pre class="command">
# echo 'deb http://tomoyo.sourceforge.jp/repos-1.8/Ubuntu10.04/ ./' &gt;&gt; /etc/apt/sources.list
# apt-get update
# apt-get install linux-generic-pae-ccs ccs-tools
</pre>

<p><strong>Ubuntu 9.10 (generic flavour)</strong></p>
<pre class="command">
# echo 'deb http://tomoyo.sourceforge.jp/repos-1.8/Ubuntu9.10/ ./' &gt;&gt; /etc/apt/sources.list
# apt-get update
# apt-get install linux-ccs ccs-tools
</pre>

<p><strong>Ubuntu 9.04 (generic flavour)</strong></p>
<pre class="command">
# echo 'deb http://tomoyo.sourceforge.jp/repos-1.8/Ubuntu9.04/ ./' &gt;&gt; /etc/apt/sources.list
# apt-get update
# apt-get install linux-ccs ccs-tools
</pre>

<p><strong>Ubuntu 8.10 (generic flavour)</strong></p>
<pre class="command">
# echo 'deb http://tomoyo.sourceforge.jp/repos-1.8/Ubuntu8.10/ ./' &gt;&gt; /etc/apt/sources.list
# apt-get update
# apt-get install linux-ccs ccs-tools
</pre>

<p><strong>Ubuntu 8.04 (generic flavour)</strong></p>
<pre class="command">
# echo 'deb http://tomoyo.sourceforge.jp/repos-1.8/Ubuntu8.04/ ./' &gt;&gt; /etc/apt/sources.list
# apt-get update
# apt-get install linux-ccs ccs-tools
</pre>

<p><strong>Ubuntu 6.06 (686 flavour)</strong></p>
<pre class="command">
# echo 'deb http://tomoyo.sourceforge.jp/repos-1.8/Ubuntu6.06/ ./' &gt;&gt; /etc/apt/sources.list
# apt-get update
# apt-get install linux-686-ccs ccs-tools
</pre>

<p><a href="chapter-3.html.ja#3.4">3.4. 設定の初期化</a>へと進んでください。</p>

<h3><a name="3.3">3.3. ソースからのインストール</a></h3>

<p>あなたが利用しているディストリビューション向けのバイナリパッケージが提供されていない場合、自分でカーネルをコンパイルする必要があります。</p>

<p>ただし、カーネルのコンパイルをせずに TOMOYO Linux の機能の主要部分を使いたい場合には、 AKARI というカーネルモジュールを利用することができます。このモジュールは TOMOYO 2.x よりも豊富な機能を提供していますが、 TOMOYO 1.x の機能の一部は使えません。「カーネルがどのようなコンパイルオプションでコンパイルされたか」と「ＣＰＵアーキテクチャ」に依存するという制限がありますが、カーネル 2.6.0 以降の全てのバージョンに対応しており、簡単に利用できます。 <a href="http://akari.sourceforge.jp/comparison.html.ja">機能比較表</a>で AKARI と TOMOYO 1.x と TOMOYO 2.x の違いについて詳細に説明されています。もし、 AKARI を使うのであれば、 <a href="http://akari.sourceforge.jp/">AKARI のウェブサイト</a>へと移動してください。</p>

<h4><a name="3.3.1">3.3.1. 依存するパッケージのインストール</a></h4>

<p>カーネルと管理ツールをコンパイルするために以下のパッケージが必要になります：</p>
<ul>
<li><strong>wget</strong> ：ソースコードをダウンロードするのに必要です。</li>
<li><strong>patch</strong> ：カーネルにパッチを当てるのに必要です。</li>
<li><strong>gcc</strong> ：カーネルおよび管理ツールをコンパイルするのに必要です。</li>
<li><strong>make</strong> ：カーネルおよび管理ツールをコンパイルするのに必要です。</li>
<li><strong>ncurses-devel</strong> または <strong>libncurses-dev</strong> ：管理ツールをコンパイルするのに必要です。</li>
</ul>

<p>これらのパッケージは以下のコマンドを実行することでインストールできます：</p>

<p><strong>RedHat 系の場合</strong></p>
<pre class="command">
# yum -y install wget patch gcc make ncurses-devel
</pre>
<p><strong>Debian 系の場合</strong></p>
<pre class="command">
# apt-get -y install wget patch gcc make libncurses-dev
</pre>
<p><strong>SUSE 系の場合</strong></p>
<pre class="command">
# yast -i wget patch gcc make ncurses-devel
</pre>

<h4><a name="3.3.2">3.3.2. カーネルのダウンロードとパッチの適用</a></h4>

<p>カーネルのソースコードを <a href="http://www.kernel.org/pub/linux/kernel/v2.4/">linux-2.4</a> または <a href="http://www.kernel.org/pub/linux/kernel/v2.6/">linux-2.6</a> からダウンロードしてください。<br>
linux-2.4 についてはカーネル 2.4.30 以降に対応しています。<br>
linux-2.6 についてはカーネル 2.6.11.12 以降に対応しています。</p>

<p>カーネルのソースを展開して、そのディレクトリに移動してください。<br>
以下の操作において、例えばカーネル 2.6.38.6 を使う場合、 2.$PATCHLEVEL.$SUBLEVEL.diff を 2.6.38.diff に置き換えてください：</p>

<pre class="command">
$ wget -O ccs-patch-1.8.1-20110511.tar.gz 'http://sourceforge.jp/frs/redir.php?f=/tomoyo/49684/ccs-patch-1.8.1-20110511.tar.gz'
$ wget -O ccs-patch-1.8.1-20110511.tar.gz.asc 'http://sourceforge.jp/frs/redir.php?f=/tomoyo/49684/ccs-patch-1.8.1-20110511.tar.gz.asc'
$ gpg ccs-patch-1.8.1-20110511.tar.gz.asc
$ tar -zxf ccs-patch-1.8.1-20110511.tar.gz
$ patch -sp1 &lt; patches/ccs-patch-2.$PATCHLEVEL.$SUBLEVEL.diff
</pre>

<h4><a name="3.3.3">3.3.3. カーネルコンパイルオプションの設定</a></h4>

<pre class="command">
$ make -s menuconfig
</pre>

<p>Security options 画面に表示される以下の項目を選択してください：</p>

<ul>
<li>[*] CCSecurity support</li>
<li>[ ] &nbsp;&nbsp;Compile as loadable kernel module</li>
<li>[ ] &nbsp;&nbsp;Disable by default</li>
<li>[ ] &nbsp;&nbsp;Do not modify 'struct task_struct' in order to keep KABI</li>
<li>(2048) Default maximal count for learning mode</li>
<li>(1024)&nbsp;&nbsp;Default maximal count for audit log</li>
<li>[ ] &nbsp;&nbsp;Use built-in policy</li>
<li>[ ] &nbsp;&nbsp;&nbsp;&nbsp;Activate immediately after loading built-in policy.</li>
<li>[ ] &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Omit calling policy loader when /sbin/init starts.</li>
<li>(/sbin/modprobe /sbin/hotplug) Built-in domain initializer programs</li>
<li>(/sbin/ccs-init) Default policy loader</li>
<li>(/sbin/ccs-start) Alternative activation trigger</li>
</ul>

<p><em>Compile as loadable kernel module</em> オプションは（組込みシステムなど） vmlinux のファイルサイズに制限がある場合に便利です。</p>

<p><em>Disable by default</em> オプションを選択した場合、カーネルのコマンドラインで ccsecurity=on という指定を行った場合だけ有効化されます。選択しなかった場合、カーネルのコマンドラインで ccsecurity=off という指定を行った場合だけ無効化されます。</p>

<p><em>Do not modify 'struct task_struct' in order to keep KABI</em> オプションはカーネル 2.6 でのみ選択可能です。このオプションを選択した場合、 TOMOYO が利用する変数をタスク構造体の外部で管理することにより、タスク構造体に変更を加えることにより生じる Kernel Application Binary Interface (KABI) の変化を回避することができます。ディストリビュータのカーネルに対して適用する際に Kernel ABI の変化を避けたい場合に選択してください。ただし、カーネルモジュールに対して TOMOYO の機能を呼び出すために ccsecurity_operations 構造体へのアクセスを認める（エクスポートする）必要があるため、カーネルパッケージを作成するスクリプトが警告を出力することは避けられない点については了承ください。</p>

<p><em>Use built-in policy</em> オプションを選択した場合、カーネル内にポリシーを埋め込むことが可能になります。（ポリシーを変更するためにはカーネルの再コンパイルが必要になります。）これは、 <em>Built-in domain initializer programs</em> オプションのスーパーセットです。</p>

<p><em>Activate immediately after loading built-in policy.</em> オプションは、 <em>Use built-in policy</em> オプションを選択した場合にのみ選択できます。このオプションを選択した場合、 initrd/initramfs の開始前から TOMOYO のアクセス制御が有効になります。このオプションを選択した場合、 <em>Default policy loader</em> オプションで指定されたポリシーローダを実行する必要性は消滅します。しかし、カーネル内に埋め込まれたポリシーとは別にポリシーローダからも追加でポリシーを読み込ませたい場合に対処できるようにするため、ポリシーローダは実行されます。</p>

<p><em>Omit calling policy loader when /sbin/init starts.</em> オプションは、 <em>Activate immediately after loading built-in policy.</em> オプションを選択した場合にのみ選択できます。このオプションを指定すると、 <em>Default policy loader</em> オプションで指定されたポリシーローダを実行しなくなります。このオプションは、（組込みシステムなど）ポリシーローダを実行することが困難な場合に便利です。</p>

<h4><a name="3.3.4">3.3.4. カーネルのコンパイルおよびインストール</a></h4>

<p>カーネルコンパイルオプションの変更が終わったら、以下のコマンドを実行してカーネルをコンパイルしてください：</p>

<pre class="command">
$ make -s dep
$ make -s
$ make -s modules
$ su
# make -s modules_install install
</pre>

<p>必要であれば initrd/initramfs を作成してください。</p>

<h4><a name="3.3.5">3.3.5. 管理ツールのインストール</a></h4>

<p>前述した依存するパッケージがインストールされていることを確認してください。以下のコマンドを実行することによりコンパイルおよびインストールできます：</p>

<pre class="command">
$ wget -O ccs-tools-1.8.1-20110511.tar.gz 'http://sourceforge.jp/frs/redir.php?f=/tomoyo/49693/ccs-tools-1.8.1-20110511.tar.gz'
$ wget -O ccs-tools-1.8.1-20110511.tar.gz.asc 'http://sourceforge.jp/frs/redir.php?f=/tomoyo/49693/ccs-tools-1.8.1-20110511.tar.gz.asc'
$ gpg ccs-tools-1.8.1-20110511.tar.gz.asc
$ tar -zxf ccs-tools-1.8.1-20110511.tar.gz
$ cd ccstools/
$ make -s
$ su
# make -s install
</pre>

<br>

<p><a href="chapter-3.html.ja#3.4">3.4. 設定の初期化</a>へと進んでください。</p>

<h3><a name="3.4">3.4. 設定の初期化</a></h3>

<p>管理ツールを実行するときに便利なように、管理ツールのインストールされているディレクトリ（ /usr/sbin ）を環境変数 PATH に追加したいと思うかもしれません。 <code>/bin/bash</code> を使用している場合、以下の行を ~/.bashrc に追加してください：</p>

<pre>
export PATH=$PATH:/usr/sbin
</pre>

<p>TOMOYO Linux を使うためには、初期設定の手順を行う必要があります。この手順により、ポリシーを保存するディレクトリが作成されます。全てのポリシーファイルは <strong>/etc/ccs/ ディレクトリに保存されます</strong>。</p>

<p>初期設定を行うには２つのコマンドのどちらかを使用します。どの機能について解析および制限を行いたいかによりどちらのコマンドを使用するかが決まります。</p>

<p>ファイルの読み書きやプログラムの実行のように<strong>ファイルに関する機能だけを制限</strong>したいと思うユーザもいることでしょう。これは、ポリシーをシンプルにしたいユーザや TOMOYO Linux が提供する全部の機能を必要とはしないユーザに適しています。ファイルに関する機能だけを制限する場合、このガイドで説明されている例えばネットワークに関する機能などの無関係な部分を無視することができます。ファイルに関する機能だけを使う場合、以下のコマンドを実行してください：</p>

<pre class="command">
# /usr/lib/ccs/init_policy --file-only-profile
</pre>

<p><strong>TOMOYO Linux が提供する全部の機能</strong>を使ってファイルやネットワークやケイパビリティや環境変数やシグナルの送信といった操作を解析したり制限したいと思うユーザもいることでしょう。これは、可能な限りシステムのセキュリティを高めたいと考えているユーザに適しています。このガイドでは全部の機能を使うことを想定して作成されています。全部の機能を使う場合、以下のコマンドを実行してください：</p>

<pre class="command">
# /usr/lib/ccs/init_policy
</pre>

<p>上記のコマンドを実行することで、以下のような出力が表示される筈です：</p>

<pre class="command">
# /usr/lib/ccs/init_policy
</pre>
<pre class="output">
Creating policy directory... OK
Creating configuration directory... OK
Creating exception policy... OK
Creating domain policy... OK
Creating manager policy... OK
Creating default profile... OK
Creating stat policy... OK
Creating module loader... OK
Creating configuration file for ccs-editpolicy ... OK
Creating configuration file for ccs-auditd ... OK
Creating configuration file for ccs-patternize ... OK
Creating configuration file for ccs-notifyd ... OK
</pre>

<h3><a name="3.5">3.5. ブートローダの設定</a></h3>

<p>ブートローダ（ GRUB 等）の設定ファイルを編集し、コンパイルされたカーネル用のエントリを追加してください。カーネルのコンパイル時に <em>Disable by default</em> オプションを指定した場合には、 ccsecurity=on というパラメータをカーネルに対するコマンドラインオプションに指定することを忘れないでください。 TOMOYO Linux カーネルで起動するための方法については、ディストリビューションやブートローダのドキュメントを参照してください。</p>

<h3><a name="3.6">3.6. システムの再起動</a></h3>

<p>ここまでで準備は完了です。（お疲れさまでした。）それでは、新しくインストールされたカーネルを使用してみましょう。システムを再起動し、 GRUB の画面（あるいは使用している他のブートローダの画面）で TOMOYO Linux カーネルを選択してください：</p>

<img src="media/fig-1-12.png" alt="fig-1-12.png" width="500" height="375">

<p>正常にインストールが完了し、ブートローダの設定が適切に行われていれば、正常にカーネルがロードされ、 TOMOYO Linux が有効になる筈です：</p>

<img src="media/fig-1-13.png" alt="fig-1-13.png" width="675" height="375">

<h3><a name="3.7">3.7. どのようにすれば TOMOYO Linux を無効化またはアンインストールできますか？</a></h3>

<p>もし、このガイドに従って操作している間またはそれ以降にシステムが起動しなくなってしまった場合、ポリシーの設定が不適切である場合を含めて TOMOYO Linux に原因があるかもしれません。その場合、 ccsecurity=off というパラメータをカーネルに対するコマンドラインオプションに指定することにより、 TOMOYO Linux が無効な状態でカーネルがロードされます。</p>

<p>幸いなことに、 TOMOYO Linux はカーネル以外には既存のプログラムやライブラリなどに対する修正を必要としません。そのため、 TOMOYO Linux のアンインストールはとても簡単です。（ <code>rpm</code> や <code>apt</code> などの）パッケージマネージャを用いてインストールされたカーネルおよび管理ツールをアンインストールするだけです。ディストリビューションから配布されているカーネルで再起動して、ブートローダから TOMOYO Linux カーネル用のエントリを削除してください。</p>

</div><!-- documentation -->

</div><!-- content -->

<div id="navfooter">
<hr>
<table>
<tr>
<td class="docs-previous">
<a href="chapter-2.html.ja">前</a>
</td>
<td class="docs-index">
<a href="index.html.ja">目次</a>
</td>
<td class="docs-next">
<a href="chapter-4.html.ja">次</a>
</td>
</tr>
<tr>
<td class="docs-previous-description">
<p>Chapter 2: なぜ TOMOYO Linux が必要なのですか？</p>
</td>
<td class="docs-home">
</td>
<td class="docs-next-description">
<p>Chapter 4: TOMOYO Linux はどのように動きますか？</p>
</td>
</tr>
</table>
</div>

<div id="footer">
<p class="language">Go to <a href="chapter-3.html.en">English page</a>.</p>
<p class="timestamp">Last modified: $Date$</p>
<p class="trademark">Linux&reg; は世界各国における Linus Torvalds の登録商標です。 TOMOYO&reg; は<a href="http://www.nttdata.co.jp/">株式会社ＮＴＴデータ</a>の登録商標です。</p>
<p><a href="http://sourceforge.jp/"><img src="http://sourceforge.jp/sflogo.php?group_id=1973" width="96" height="31" alt="SourceForge.jp"></a></p>
</div>

</body>
</html>
