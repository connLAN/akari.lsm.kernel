/*
 * editpolicy.h
 *
 * AKARI's utilities.
 *
 * Copyright (C) 2005-2010  NTT DATA CORPORATION
 *
 * Version: 1.8.0-pre   2010/08/01
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License v2 as published by the
 * Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 */
#include <signal.h>
#include <curses.h>

enum akari_screen_type {
	AKARI_SCREEN_EXCEPTION_LIST,
	AKARI_SCREEN_DOMAIN_LIST,
	AKARI_SCREEN_ACL_LIST,
	AKARI_SCREEN_PROFILE_LIST,
	AKARI_SCREEN_MANAGER_LIST,
	AKARI_SCREEN_QUERY_LIST,
	AKARI_SCREEN_MEMINFO_LIST,
	AKARI_MAXSCREEN
};

enum akari_transition_type {
	/* Do not change this order, */
	AKARI_TRANSITION_CONTROL_NO_INITIALIZE,
	AKARI_TRANSITION_CONTROL_INITIALIZE,
	AKARI_TRANSITION_CONTROL_NO_KEEP,
	AKARI_TRANSITION_CONTROL_KEEP,
	AKARI_MAX_TRANSITION_TYPE
};

struct akari_transition_control_entry {
	const struct akari_path_info *domainname;    /* This may be NULL */
	const struct akari_path_info *program;       /* This may be NULL */
	u8 type;
	_Bool is_last_name;
};

struct akari_generic_acl {
	u16 directive;
	u8 selected;
	const char *operand;
};

struct akari_editpolicy_directive {
	const char *original;
	const char *alias;
	int original_len;
	int alias_len;
};

struct akari_misc_policy {
	const struct akari_path_info **list;
	int list_len;
};

struct akari_path_group_entry {
	const struct akari_path_info *group_name;
	const struct akari_path_info **member_name;
	int member_name_len;
};

struct akari_readline_data {
	const char **history;
	int count;
	int max;
	char *search_buffer[AKARI_MAXSCREEN];
};

enum akari_editpolicy_directives {
	AKARI_DIRECTIVE_NONE,
	AKARI_DIRECTIVE_ACL_GROUP_000,
	AKARI_DIRECTIVE_ACL_GROUP_001,
	AKARI_DIRECTIVE_ACL_GROUP_002,
	AKARI_DIRECTIVE_ACL_GROUP_003,
	AKARI_DIRECTIVE_ACL_GROUP_004,
	AKARI_DIRECTIVE_ACL_GROUP_005,
	AKARI_DIRECTIVE_ACL_GROUP_006,
	AKARI_DIRECTIVE_ACL_GROUP_007,
	AKARI_DIRECTIVE_ACL_GROUP_008,
	AKARI_DIRECTIVE_ACL_GROUP_009,
	AKARI_DIRECTIVE_ACL_GROUP_010,
	AKARI_DIRECTIVE_ACL_GROUP_011,
	AKARI_DIRECTIVE_ACL_GROUP_012,
	AKARI_DIRECTIVE_ACL_GROUP_013,
	AKARI_DIRECTIVE_ACL_GROUP_014,
	AKARI_DIRECTIVE_ACL_GROUP_015,
	AKARI_DIRECTIVE_ACL_GROUP_016,
	AKARI_DIRECTIVE_ACL_GROUP_017,
	AKARI_DIRECTIVE_ACL_GROUP_018,
	AKARI_DIRECTIVE_ACL_GROUP_019,
	AKARI_DIRECTIVE_ACL_GROUP_020,
	AKARI_DIRECTIVE_ACL_GROUP_021,
	AKARI_DIRECTIVE_ACL_GROUP_022,
	AKARI_DIRECTIVE_ACL_GROUP_023,
	AKARI_DIRECTIVE_ACL_GROUP_024,
	AKARI_DIRECTIVE_ACL_GROUP_025,
	AKARI_DIRECTIVE_ACL_GROUP_026,
	AKARI_DIRECTIVE_ACL_GROUP_027,
	AKARI_DIRECTIVE_ACL_GROUP_028,
	AKARI_DIRECTIVE_ACL_GROUP_029,
	AKARI_DIRECTIVE_ACL_GROUP_030,
	AKARI_DIRECTIVE_ACL_GROUP_031,
	AKARI_DIRECTIVE_ACL_GROUP_032,
	AKARI_DIRECTIVE_ACL_GROUP_033,
	AKARI_DIRECTIVE_ACL_GROUP_034,
	AKARI_DIRECTIVE_ACL_GROUP_035,
	AKARI_DIRECTIVE_ACL_GROUP_036,
	AKARI_DIRECTIVE_ACL_GROUP_037,
	AKARI_DIRECTIVE_ACL_GROUP_038,
	AKARI_DIRECTIVE_ACL_GROUP_039,
	AKARI_DIRECTIVE_ACL_GROUP_040,
	AKARI_DIRECTIVE_ACL_GROUP_041,
	AKARI_DIRECTIVE_ACL_GROUP_042,
	AKARI_DIRECTIVE_ACL_GROUP_043,
	AKARI_DIRECTIVE_ACL_GROUP_044,
	AKARI_DIRECTIVE_ACL_GROUP_045,
	AKARI_DIRECTIVE_ACL_GROUP_046,
	AKARI_DIRECTIVE_ACL_GROUP_047,
	AKARI_DIRECTIVE_ACL_GROUP_048,
	AKARI_DIRECTIVE_ACL_GROUP_049,
	AKARI_DIRECTIVE_ACL_GROUP_050,
	AKARI_DIRECTIVE_ACL_GROUP_051,
	AKARI_DIRECTIVE_ACL_GROUP_052,
	AKARI_DIRECTIVE_ACL_GROUP_053,
	AKARI_DIRECTIVE_ACL_GROUP_054,
	AKARI_DIRECTIVE_ACL_GROUP_055,
	AKARI_DIRECTIVE_ACL_GROUP_056,
	AKARI_DIRECTIVE_ACL_GROUP_057,
	AKARI_DIRECTIVE_ACL_GROUP_058,
	AKARI_DIRECTIVE_ACL_GROUP_059,
	AKARI_DIRECTIVE_ACL_GROUP_060,
	AKARI_DIRECTIVE_ACL_GROUP_061,
	AKARI_DIRECTIVE_ACL_GROUP_062,
	AKARI_DIRECTIVE_ACL_GROUP_063,
	AKARI_DIRECTIVE_ACL_GROUP_064,
	AKARI_DIRECTIVE_ACL_GROUP_065,
	AKARI_DIRECTIVE_ACL_GROUP_066,
	AKARI_DIRECTIVE_ACL_GROUP_067,
	AKARI_DIRECTIVE_ACL_GROUP_068,
	AKARI_DIRECTIVE_ACL_GROUP_069,
	AKARI_DIRECTIVE_ACL_GROUP_070,
	AKARI_DIRECTIVE_ACL_GROUP_071,
	AKARI_DIRECTIVE_ACL_GROUP_072,
	AKARI_DIRECTIVE_ACL_GROUP_073,
	AKARI_DIRECTIVE_ACL_GROUP_074,
	AKARI_DIRECTIVE_ACL_GROUP_075,
	AKARI_DIRECTIVE_ACL_GROUP_076,
	AKARI_DIRECTIVE_ACL_GROUP_077,
	AKARI_DIRECTIVE_ACL_GROUP_078,
	AKARI_DIRECTIVE_ACL_GROUP_079,
	AKARI_DIRECTIVE_ACL_GROUP_080,
	AKARI_DIRECTIVE_ACL_GROUP_081,
	AKARI_DIRECTIVE_ACL_GROUP_082,
	AKARI_DIRECTIVE_ACL_GROUP_083,
	AKARI_DIRECTIVE_ACL_GROUP_084,
	AKARI_DIRECTIVE_ACL_GROUP_085,
	AKARI_DIRECTIVE_ACL_GROUP_086,
	AKARI_DIRECTIVE_ACL_GROUP_087,
	AKARI_DIRECTIVE_ACL_GROUP_088,
	AKARI_DIRECTIVE_ACL_GROUP_089,
	AKARI_DIRECTIVE_ACL_GROUP_090,
	AKARI_DIRECTIVE_ACL_GROUP_091,
	AKARI_DIRECTIVE_ACL_GROUP_092,
	AKARI_DIRECTIVE_ACL_GROUP_093,
	AKARI_DIRECTIVE_ACL_GROUP_094,
	AKARI_DIRECTIVE_ACL_GROUP_095,
	AKARI_DIRECTIVE_ACL_GROUP_096,
	AKARI_DIRECTIVE_ACL_GROUP_097,
	AKARI_DIRECTIVE_ACL_GROUP_098,
	AKARI_DIRECTIVE_ACL_GROUP_099,
	AKARI_DIRECTIVE_ACL_GROUP_100,
	AKARI_DIRECTIVE_ACL_GROUP_101,
	AKARI_DIRECTIVE_ACL_GROUP_102,
	AKARI_DIRECTIVE_ACL_GROUP_103,
	AKARI_DIRECTIVE_ACL_GROUP_104,
	AKARI_DIRECTIVE_ACL_GROUP_105,
	AKARI_DIRECTIVE_ACL_GROUP_106,
	AKARI_DIRECTIVE_ACL_GROUP_107,
	AKARI_DIRECTIVE_ACL_GROUP_108,
	AKARI_DIRECTIVE_ACL_GROUP_109,
	AKARI_DIRECTIVE_ACL_GROUP_110,
	AKARI_DIRECTIVE_ACL_GROUP_111,
	AKARI_DIRECTIVE_ACL_GROUP_112,
	AKARI_DIRECTIVE_ACL_GROUP_113,
	AKARI_DIRECTIVE_ACL_GROUP_114,
	AKARI_DIRECTIVE_ACL_GROUP_115,
	AKARI_DIRECTIVE_ACL_GROUP_116,
	AKARI_DIRECTIVE_ACL_GROUP_117,
	AKARI_DIRECTIVE_ACL_GROUP_118,
	AKARI_DIRECTIVE_ACL_GROUP_119,
	AKARI_DIRECTIVE_ACL_GROUP_120,
	AKARI_DIRECTIVE_ACL_GROUP_121,
	AKARI_DIRECTIVE_ACL_GROUP_122,
	AKARI_DIRECTIVE_ACL_GROUP_123,
	AKARI_DIRECTIVE_ACL_GROUP_124,
	AKARI_DIRECTIVE_ACL_GROUP_125,
	AKARI_DIRECTIVE_ACL_GROUP_126,
	AKARI_DIRECTIVE_ACL_GROUP_127,
	AKARI_DIRECTIVE_ACL_GROUP_128,
	AKARI_DIRECTIVE_ACL_GROUP_129,
	AKARI_DIRECTIVE_ACL_GROUP_130,
	AKARI_DIRECTIVE_ACL_GROUP_131,
	AKARI_DIRECTIVE_ACL_GROUP_132,
	AKARI_DIRECTIVE_ACL_GROUP_133,
	AKARI_DIRECTIVE_ACL_GROUP_134,
	AKARI_DIRECTIVE_ACL_GROUP_135,
	AKARI_DIRECTIVE_ACL_GROUP_136,
	AKARI_DIRECTIVE_ACL_GROUP_137,
	AKARI_DIRECTIVE_ACL_GROUP_138,
	AKARI_DIRECTIVE_ACL_GROUP_139,
	AKARI_DIRECTIVE_ACL_GROUP_140,
	AKARI_DIRECTIVE_ACL_GROUP_141,
	AKARI_DIRECTIVE_ACL_GROUP_142,
	AKARI_DIRECTIVE_ACL_GROUP_143,
	AKARI_DIRECTIVE_ACL_GROUP_144,
	AKARI_DIRECTIVE_ACL_GROUP_145,
	AKARI_DIRECTIVE_ACL_GROUP_146,
	AKARI_DIRECTIVE_ACL_GROUP_147,
	AKARI_DIRECTIVE_ACL_GROUP_148,
	AKARI_DIRECTIVE_ACL_GROUP_149,
	AKARI_DIRECTIVE_ACL_GROUP_150,
	AKARI_DIRECTIVE_ACL_GROUP_151,
	AKARI_DIRECTIVE_ACL_GROUP_152,
	AKARI_DIRECTIVE_ACL_GROUP_153,
	AKARI_DIRECTIVE_ACL_GROUP_154,
	AKARI_DIRECTIVE_ACL_GROUP_155,
	AKARI_DIRECTIVE_ACL_GROUP_156,
	AKARI_DIRECTIVE_ACL_GROUP_157,
	AKARI_DIRECTIVE_ACL_GROUP_158,
	AKARI_DIRECTIVE_ACL_GROUP_159,
	AKARI_DIRECTIVE_ACL_GROUP_160,
	AKARI_DIRECTIVE_ACL_GROUP_161,
	AKARI_DIRECTIVE_ACL_GROUP_162,
	AKARI_DIRECTIVE_ACL_GROUP_163,
	AKARI_DIRECTIVE_ACL_GROUP_164,
	AKARI_DIRECTIVE_ACL_GROUP_165,
	AKARI_DIRECTIVE_ACL_GROUP_166,
	AKARI_DIRECTIVE_ACL_GROUP_167,
	AKARI_DIRECTIVE_ACL_GROUP_168,
	AKARI_DIRECTIVE_ACL_GROUP_169,
	AKARI_DIRECTIVE_ACL_GROUP_170,
	AKARI_DIRECTIVE_ACL_GROUP_171,
	AKARI_DIRECTIVE_ACL_GROUP_172,
	AKARI_DIRECTIVE_ACL_GROUP_173,
	AKARI_DIRECTIVE_ACL_GROUP_174,
	AKARI_DIRECTIVE_ACL_GROUP_175,
	AKARI_DIRECTIVE_ACL_GROUP_176,
	AKARI_DIRECTIVE_ACL_GROUP_177,
	AKARI_DIRECTIVE_ACL_GROUP_178,
	AKARI_DIRECTIVE_ACL_GROUP_179,
	AKARI_DIRECTIVE_ACL_GROUP_180,
	AKARI_DIRECTIVE_ACL_GROUP_181,
	AKARI_DIRECTIVE_ACL_GROUP_182,
	AKARI_DIRECTIVE_ACL_GROUP_183,
	AKARI_DIRECTIVE_ACL_GROUP_184,
	AKARI_DIRECTIVE_ACL_GROUP_185,
	AKARI_DIRECTIVE_ACL_GROUP_186,
	AKARI_DIRECTIVE_ACL_GROUP_187,
	AKARI_DIRECTIVE_ACL_GROUP_188,
	AKARI_DIRECTIVE_ACL_GROUP_189,
	AKARI_DIRECTIVE_ACL_GROUP_190,
	AKARI_DIRECTIVE_ACL_GROUP_191,
	AKARI_DIRECTIVE_ACL_GROUP_192,
	AKARI_DIRECTIVE_ACL_GROUP_193,
	AKARI_DIRECTIVE_ACL_GROUP_194,
	AKARI_DIRECTIVE_ACL_GROUP_195,
	AKARI_DIRECTIVE_ACL_GROUP_196,
	AKARI_DIRECTIVE_ACL_GROUP_197,
	AKARI_DIRECTIVE_ACL_GROUP_198,
	AKARI_DIRECTIVE_ACL_GROUP_199,
	AKARI_DIRECTIVE_ACL_GROUP_200,
	AKARI_DIRECTIVE_ACL_GROUP_201,
	AKARI_DIRECTIVE_ACL_GROUP_202,
	AKARI_DIRECTIVE_ACL_GROUP_203,
	AKARI_DIRECTIVE_ACL_GROUP_204,
	AKARI_DIRECTIVE_ACL_GROUP_205,
	AKARI_DIRECTIVE_ACL_GROUP_206,
	AKARI_DIRECTIVE_ACL_GROUP_207,
	AKARI_DIRECTIVE_ACL_GROUP_208,
	AKARI_DIRECTIVE_ACL_GROUP_209,
	AKARI_DIRECTIVE_ACL_GROUP_210,
	AKARI_DIRECTIVE_ACL_GROUP_211,
	AKARI_DIRECTIVE_ACL_GROUP_212,
	AKARI_DIRECTIVE_ACL_GROUP_213,
	AKARI_DIRECTIVE_ACL_GROUP_214,
	AKARI_DIRECTIVE_ACL_GROUP_215,
	AKARI_DIRECTIVE_ACL_GROUP_216,
	AKARI_DIRECTIVE_ACL_GROUP_217,
	AKARI_DIRECTIVE_ACL_GROUP_218,
	AKARI_DIRECTIVE_ACL_GROUP_219,
	AKARI_DIRECTIVE_ACL_GROUP_220,
	AKARI_DIRECTIVE_ACL_GROUP_221,
	AKARI_DIRECTIVE_ACL_GROUP_222,
	AKARI_DIRECTIVE_ACL_GROUP_223,
	AKARI_DIRECTIVE_ACL_GROUP_224,
	AKARI_DIRECTIVE_ACL_GROUP_225,
	AKARI_DIRECTIVE_ACL_GROUP_226,
	AKARI_DIRECTIVE_ACL_GROUP_227,
	AKARI_DIRECTIVE_ACL_GROUP_228,
	AKARI_DIRECTIVE_ACL_GROUP_229,
	AKARI_DIRECTIVE_ACL_GROUP_230,
	AKARI_DIRECTIVE_ACL_GROUP_231,
	AKARI_DIRECTIVE_ACL_GROUP_232,
	AKARI_DIRECTIVE_ACL_GROUP_233,
	AKARI_DIRECTIVE_ACL_GROUP_234,
	AKARI_DIRECTIVE_ACL_GROUP_235,
	AKARI_DIRECTIVE_ACL_GROUP_236,
	AKARI_DIRECTIVE_ACL_GROUP_237,
	AKARI_DIRECTIVE_ACL_GROUP_238,
	AKARI_DIRECTIVE_ACL_GROUP_239,
	AKARI_DIRECTIVE_ACL_GROUP_240,
	AKARI_DIRECTIVE_ACL_GROUP_241,
	AKARI_DIRECTIVE_ACL_GROUP_242,
	AKARI_DIRECTIVE_ACL_GROUP_243,
	AKARI_DIRECTIVE_ACL_GROUP_244,
	AKARI_DIRECTIVE_ACL_GROUP_245,
	AKARI_DIRECTIVE_ACL_GROUP_246,
	AKARI_DIRECTIVE_ACL_GROUP_247,
	AKARI_DIRECTIVE_ACL_GROUP_248,
	AKARI_DIRECTIVE_ACL_GROUP_249,
	AKARI_DIRECTIVE_ACL_GROUP_250,
	AKARI_DIRECTIVE_ACL_GROUP_251,
	AKARI_DIRECTIVE_ACL_GROUP_252,
	AKARI_DIRECTIVE_ACL_GROUP_253,
	AKARI_DIRECTIVE_ACL_GROUP_254,
	AKARI_DIRECTIVE_ACL_GROUP_255,
	AKARI_DIRECTIVE_ADDRESS_GROUP,
	AKARI_DIRECTIVE_AGGREGATOR,
	AKARI_DIRECTIVE_FILE_APPEND,
	AKARI_DIRECTIVE_FILE_CHGRP,
	AKARI_DIRECTIVE_FILE_CHMOD,
	AKARI_DIRECTIVE_FILE_CHOWN,
	AKARI_DIRECTIVE_FILE_CHROOT,
	AKARI_DIRECTIVE_FILE_CREATE,
	AKARI_DIRECTIVE_FILE_EXECUTE,
	AKARI_DIRECTIVE_FILE_IOCTL,
	AKARI_DIRECTIVE_FILE_LINK,
	AKARI_DIRECTIVE_FILE_MKBLOCK,
	AKARI_DIRECTIVE_FILE_MKCHAR,
	AKARI_DIRECTIVE_FILE_MKDIR,
	AKARI_DIRECTIVE_FILE_MKFIFO,
	AKARI_DIRECTIVE_FILE_MKSOCK,
	AKARI_DIRECTIVE_FILE_MOUNT,
	AKARI_DIRECTIVE_FILE_PATTERN,
	AKARI_DIRECTIVE_FILE_PIVOT_ROOT,
	AKARI_DIRECTIVE_FILE_READ,
	AKARI_DIRECTIVE_FILE_RENAME,
	AKARI_DIRECTIVE_FILE_RMDIR,
	AKARI_DIRECTIVE_FILE_SYMLINK,
	AKARI_DIRECTIVE_FILE_TRANSIT,
	AKARI_DIRECTIVE_FILE_TRUNCATE,
	AKARI_DIRECTIVE_FILE_UNLINK,
	AKARI_DIRECTIVE_FILE_UNMOUNT,
	AKARI_DIRECTIVE_FILE_WRITE,
	AKARI_DIRECTIVE_INITIALIZE_DOMAIN,
	AKARI_DIRECTIVE_IPC_SIGNAL,
	AKARI_DIRECTIVE_KEEP_DOMAIN,
	AKARI_DIRECTIVE_MISC_ENV,
	AKARI_DIRECTIVE_NETWORK_INET,
	AKARI_DIRECTIVE_NETWORK_UNIX,
	AKARI_DIRECTIVE_NO_INITIALIZE_DOMAIN,
	AKARI_DIRECTIVE_NO_KEEP_DOMAIN,
	AKARI_DIRECTIVE_NUMBER_GROUP,
	AKARI_DIRECTIVE_PATH_GROUP,
	AKARI_DIRECTIVE_QUOTA_EXCEEDED,
	AKARI_DIRECTIVE_TASK_AUTO_DOMAIN_TRANSITION,
	AKARI_DIRECTIVE_TASK_MANUAL_DOMAIN_TRANSITION,
	AKARI_DIRECTIVE_TRANSITION_FAILED,
	AKARI_DIRECTIVE_USE_GROUP,
	AKARI_DIRECTIVE_USE_PROFILE,
	AKARI_MAX_DIRECTIVE_INDEX
};

enum akari_color_pair {
	AKARI_NORMAL,
	AKARI_DOMAIN_HEAD,
	AKARI_DOMAIN_CURSOR,
	AKARI_EXCEPTION_HEAD,
	AKARI_EXCEPTION_CURSOR,
	AKARI_ACL_HEAD,
	AKARI_ACL_CURSOR,
	AKARI_PROFILE_HEAD,
	AKARI_PROFILE_CURSOR,
	AKARI_MANAGER_HEAD,
	AKARI_MANAGER_CURSOR,
	AKARI_MEMORY_HEAD,
	AKARI_MEMORY_CURSOR,
	AKARI_DISP_ERR
};

#define AKARI_HEADER_LINES 3

#define AKARI_CONFIG_FILE "/usr/lib/akari/akaritools.conf"

int akari_add_address_group_policy(char *data, const _Bool is_delete);
int akari_add_number_group_policy(char *data, const _Bool is_delete);
int akari_editpolicy_color_cursor(const int screen);
int akari_editpolicy_color_head(const int screen);
int akari_editpolicy_get_current(void);
void akari_editpolicy_attr_change(const attr_t attr, const _Bool flg);
void akari_editpolicy_color_change(const attr_t attr, const _Bool flg);
void akari_editpolicy_color_init(void);
void akari_editpolicy_init_keyword_map(void);
void akari_editpolicy_line_draw(const int screen);
void akari_editpolicy_offline_daemon(void);
void akari_editpolicy_sttr_restore(void);
void akari_editpolicy_sttr_save(void);
void akari_editpolicy_try_optimize(struct akari_domain_policy *dp, const int current, const int screen);
void akari_send_fd(char *data, int *fd);

extern int akari_address_group_list_len;
extern int akari_current_y[AKARI_MAXSCREEN];
extern int akari_generic_acl_list_count;
extern int akari_list_item_count[AKARI_MAXSCREEN];
extern int akari_number_group_list_len;
extern int akari_path_group_list_len;
extern int akari_persistent_fd;
extern struct akari_editpolicy_directive akari_directives[AKARI_MAX_DIRECTIVE_INDEX];
extern struct akari_generic_acl *akari_generic_acl_list;
extern struct akari_path_group_entry *akari_path_group_list;
